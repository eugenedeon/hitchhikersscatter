(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     91642,       1923]
NotebookOptionsPosition[     88680,       1859]
NotebookOutlinePosition[     89126,       1877]
CellTagsIndexPosition[     89083,       1874]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Scattering Kernels in 3D", "Title",
 CellChangeTimes->{{3.585734521070969*^9, 
  3.5857345254077377`*^9}},ExpressionUUID->"764b4fc2-101a-4e0d-bf25-\
3d960c3d54e4"],

Cell[TextData[{
 "This is code to accompany the book:\n",
 StyleBox["A Hitchhiker\[CloseCurlyQuote]s Guide to Multiple Scattering\n", 
  "Subchapter"],
 StyleBox["\[Copyright] 2020", "Subsection"],
 StyleBox[" ", "Section"],
 StyleBox["Eugene d\[CloseCurlyQuote]Eon \nwww.eugenedeon.com/hitchhikers", 
  "Subsection"]
}], "Text",
 CellChangeTimes->{{3.6174286022468777`*^9, 3.617428710592918*^9}, {
  3.6410039396211576`*^9, 3.641003945296226*^9}, {3.645060407236547*^9, 
  3.645060444609275*^9}, {3.676692783408165*^9, 3.676692783478593*^9}, {
  3.734793680865534*^9, 3.734793681140257*^9}, {3.759597246197913*^9, 
  3.759597246419695*^9}, {3.7948778467527523`*^9, 
  3.794877854199087*^9}},ExpressionUUID->"e90212a0-a776-4f73-940b-\
ce89c3d1c344"],

Cell[CellGroupData[{

Cell["Gegenbauer Scattering", "Section",
 CellChangeTimes->{{3.583600246763159*^9, 3.583600249168366*^9}, {
  3.585794043807156*^9, 3.5857940455743933`*^9}, {3.585807845785181*^9, 
  3.585807846648521*^9}, {3.585809135171125*^9, 3.585809136905671*^9}, {
  3.646182997224452*^9, 
  3.646182998544293*^9}},ExpressionUUID->"144d52b8-705d-4697-a852-\
82cc01bbc50d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"pGegenbauer", "[", 
   RowBox[{"u_", ",", "g_", ",", "a_"}], "]"}], ":=", 
  FractionBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", " ", "+", " ", 
      SuperscriptBox["g", "2"], "-", 
      RowBox[{"2", " ", "g", " ", "u"}]}], ")"}], 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{"a", "+", "1"}], ")"}]}]], 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "g"}], ")"}], 
        RowBox[{
         RowBox[{"-", "2"}], " ", "a"}]], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g"}], ")"}], 
        RowBox[{
         RowBox[{"-", "2"}], " ", "a"}]]}], ")"}], " ", "\[Pi]"}], 
    RowBox[{"a", " ", "g"}]]]}]], "Input",
 CellChangeTimes->{{3.5804973498620453`*^9, 3.580497351285735*^9}, 
   3.5857345386153917`*^9, {3.5857925573913193`*^9, 3.585792559064145*^9}, {
   3.585794050389987*^9, 3.585794083731298*^9}, {3.585807849110382*^9, 
   3.585807922560369*^9}, {3.585809147347542*^9, 3.5858092037227592`*^9}, {
   3.5858092569212227`*^9, 3.585809270358285*^9}},
 CellLabel->
  "In[540]:=",ExpressionUUID->"b4f4568b-19fb-47bc-8ac7-91d4ab018086"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pGegenbauer", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], ",", "0.5", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pGegenbauer", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], ",", "0.5", ",", "3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"pGegenbauer", "[", 
      RowBox[{
       RowBox[{"Cos", "[", "t", "]"}], ",", "0.5", ",", "5"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "Pi"}], ",", "Pi"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "[", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}], "]"}], ","}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\[Theta]", ",", 
        "\"\<Gegenbauer Scattering, G = 0.5, a = 1, 3, 5\>\""}], "}"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.590387568405507*^9, 
  3.590387729217903*^9}},ExpressionUUID->"03cd135d-f897-4803-a715-\
010f37ffe5a8"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
wMj/Pw/8fy3+tLQ=
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
n2D/v//k/wBqGJtP
      "]]}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJw1m3k0V9/3/194eXmRtzkkQkkyZSoSd19CkiKUBmWIlKmUmUKkMmUomZIp
U6SSIdO9GTIXQl7meZ7n2ddnrd/vr7se65y1z3M/z7ln7fPHFjR7oGdBTSAQ
/tAQCP/7ap1nOrspSI9v/PkqdoOfgpzJ9ZgjH6LHdUT69Mz2WFxw8j0nDz1+
6sV0ldse8wVdvyDESY8n+u0LSNpjpvWqNWk2epy7OTC2a493zU+lABM9vnVs
eOuoAAWZa0zWv8hAj++7mZ7pucd9SuxUN0n0uInB68zxPW5K8/58j5oeP8hp
t31HkIKUcczddNoh4wdLleNn9vib12163w0yHv+KK+LVYQqSNFWfF7pCxrfb
T/bJHaEgb66dMf+wQManZZc85/b4eUU6a9YMGfe59MepWIiCOElxY4UTZJyR
yeJX5FEKco28fKBtgIx/EetxenaMgpx3uFM12EPGVb2TOl+LUBDFviaH+Q4y
bucyGp91nILwFnz+w/iXjI+H8l3lEacg/wnxPeH5Q8ZbVLa07ktQkJ3XAaIi
dWT8NyaTUS25l5/lvedny8l4LXnuW4H0Xn5/22QuY2Q8lPGB2XnZvfxAve92
ERnfb3Hq5YQcBUnmOnzGLYeMNzER1G4rUBDLqs65L0lk/Kt4UP8+dE+vrFZc
6QcyXlhjnyqgSkE0PxRcqI8h44t/Gqk01CiIqPPblNFwMr71OuZ5mSYFmRHW
MTrku+ePgJi2jx4F6Q0roRf3IuOJL4rl+a5QkMYdsfzTHmT8ndWTnirDPX/b
yGxXHMi4ibDTY51be375lVUFmO+t/0reSOT+np4FKccoEzL+wefcT02bPT23
PxxONSLj55X6Wdwe7Pl1yuNJmcGeH3/XXjE7UZDt4ZOy62pk3HPDMonkS0F8
1dPj7h7d8/f02rBYEgXBA9x0+QXJeD3vE48fqRRkq+kCdTsvGS9xFPO9mUlB
Ht+esTjPsae/5yBHdy4FMXOWlRCnIeNnaMWf/KuhIJBeUjTfR4ers3+78n2Z
grjNBttmdNHhNeuj34I3KUjeSRP+O+10uGOW+sWnVB2IZBm1T8sfOtx9HX/8
/r8OhLfznFZ+KR1+WfWbWLdwB7LB2NzuEUuH6wXt8j281YGc0k/yPxlJh9vN
MLz9aN6BPIpyUJoJp8O5trMuzFt3IONHueKNA+hwnufieJ1bB9KOGFmqutHh
Fb95fwdHdSB5D0eW6a7R4R2bsr63OzsQ+5YNtnD2vfV17a7/eNiJROjp3HjD
TIcfXHvkI+3WiRQ3JiW83UeHW1rmPMJ8OhFSg7ZUJA0d/vMH3Qrvu04ktjLu
4vtFEj4fVjLbV9qJVOepvkz9S8KjPAbN4tm6kBm5d3/S/pBwUUU7bU++LoQ9
Z5Izo46Eo1b99xxFupDb2W8+ZpaT8Ce8v96nIl3IYupI2dccEu7N8LJI2KYL
ORTlv10UTsKdSXnZKXVdiBpXr1rJaxLumbwwSmzvQu6/lQ0sDSDhmR9pt9yH
upDvoV08P31I+MpinGjudhdy3l9S4ddjEi4cXd5yVbobcXBvftSoT8J5fvu1
2r/vRmpv8YwNsZNw+38NI2OvehCdD0qwwUzCm2djlXSjepCWvtsRzIwkfOj1
Y5u/aT1I950kNUUiCa/YMRuXqO5B5u6LJ7xeosXrdyz15cm9CJcTckOxlRb/
td5TURzUi5gHm9W/jqDFc7ytia2Gfcj4H98jH8No8UfLXpvWpn2IHWuqW2Ew
LZ5VedWa3boPcX4zKTLsR4s/NfJke/O0D/GPdniu6EyLC989wWmc0od8SfFD
hg1p8UbJ0wbS633IdmnGF8UDtLj+m2eRHpn9SH3HCcZNDlp8/uO2w5Uf/Ujs
ynfLIhZaPOgEY4z6r35ESRI7pESmxeUkAm7b9PUjbu//BiqvEnFp5U2W9v0D
yIr71j20lYi/cXcuufB8AJlTuCSoEUrEJzwcf7Y4DyK4wV8PUhAR50FMPo69
GEReP7zW/uslEedkeGF8IHIQkUwze33Oi4hP/9d/pLlgELHlct7WfEDEM5i5
klM2B5GJ5Q+UCxeJuIadTQPDiyFk8Nt86GV6Ir79diXFIG8YiSVtPLtBS8T1
Wa7Yc9UMI1dvUDvcoSLi2VSy5eudw0g1FftVx3UaPP7ox04+6hHks64cT9Q4
DX6d5PPfhM4I4jLjlNhXQ4NrojtelfMjCKPo1rcH/jR4UMCrU0q6Y0jlE2Ky
ix8NzqD08KCF5RjytInxrfezvflfZJxyn44h8y58zuFuNHhA082vDVljSFsV
cibfigbPePPg9tB/40iChXf5jhYNblXgVjLdOo6cSiC1BO2jwY3uVT39/GIS
UfxjX6NCR4Mruet9rUmZRJDtrtJlahr82a5WEP+vSUTjek76rQ1q/HxJt8QT
2inEkNXEU2KcGtc336z978UU4uL9Q7ThFzXO7Situ/J2GvHIFhLwLqPGFSz/
XV0rmEa8ul/vP1lKjZcED2sqd00jL0/fJbzPpcYbewYkwo7MIJHzbG02ydT4
oQEDKpfcGeSHqY034zNq3N/Uv6FgZBYpff3PCX+yx7fxBS66OaSsRNXGwZUa
t1yyqVrnmUNqDxww7HpIjQfPbERLn51DOpoqxTONqfFq3ikt97dzyIYKf/sF
ZWr8x8UDGRUq84jS4WbJgDUqvDaH6+yfogUknn2fnP4SFc50+ca70JYFhIZW
7fTBOSpc+HFuiu/0AlI7mnv20ygVnq5BzNrhX0SuZUVdq2ujwrkt74ZderGI
OCiYPtuXS4WHdBvcKDdeQtqPR7/4+4UKH/MI4KlyX0LOHPwbGJNJhT99l7BM
HbmEUO+ovRNLpsKLbB7uCjUtISHlIpkXwqlwPpdtXEBjGcm8NNcaYE+FHxMn
udmdWUFY0OOd+rZU+L19tvtlb64gj6XN+g7ep8K/1Hu4KLivIIocLROfTKjw
JZfzS3TFK0g1JX+3TocKbz5i/q0WXUWGzD2PM0pS4e5zTpI2hmsIrzvTk8AJ
At7F76E4WLKB3E+u5Xo/QsCPB/c6oUMbSF6D37esAQJ+7VL6o3GGTeSywO7o
7w4C/rzwxjXB65uIX+WsHmsdAS/8nM2otL6JzDI3iUR8IuAGjzu8ijW3EaXT
QeUpqQQ8WaGHIOqwjfibnb+dn0TA61qLmmY+bCNCuT/D22MI+HkX7yDvtW3k
2o1vOzyBBJxE1F3uz9pBypLDWz7YEHCB2FcjQvsJwPxb58GXewTc4bL+lyoJ
Ahit7mP4aU7AW33jZmI1CLB63hcGjAj4H8E/SX0uBBCfdcgQukjA0Qxd2Y5e
Arw9fdUrXYKAPxOPOUEsoILGWOlrd7t3sfPHjtHOvKEBQvKDiO6WXcxk2cEj
PJ8GpD5ltRjU72J6W3N9LztoIOTH8ctni3YxJLwbuytIBN02QS2BqF1MjPu2
LymHCI3MbEodBrvYwnFW+tgRWiBw6bpd1t7F4gfu/kpjIoHUoeCC6rO7mNOt
1DZ2eRKEiDOczJfZxYq8Tk6QX5FA9zy15BuWXWxn+97tAGk6aHy2wH+pfgfT
deVs7H1LBoK/1O3K8h1Mq7fOW6eCDFKhdrFKRTvYbgpXr+QiGUI+THCLZexg
3PE376vo0YNu8QAr+eUOtnTisHD7fgZoXG6mKTu7g/ksr8lN5eyDP/dyRk8W
bWMJL9pZ/K8wQ3Pvqi6Ss42tM95vux7CDG1XlQo1Pm1jj8TTVHLqmKFLrTLQ
MGYbK/+SYkY8zAITAv+kXd23sX0MV2tz3rMAkbLhXnxmG+M3eYodTWIFsi4M
V8huYw/qHpidrGSFfVU+lxrEtjHh29QGEaOswJbLKNhzcBu7EFL8VkeCDfhD
D/3a3dzCOANlNAuK2UDxvCrL2eIt7H5H8ZLUFDsguJ/rhe9bWKRu2LMydg5Q
ka8b0M/cwmY7j1p+P8MBmkcNcs1jtzDeF/S3SgI54ArV3Rt+HlvYHZ3NGm/Z
/fDwx6vkGqUtLEOLleb3G05IOd6koFuyiZFCm5i2Ph+Ae8e+/vTK3cRkefJZ
GgYPgOjRUK2vWZvYa8kYOcEDPPBZ4LIRW9wm5rN5OeHacx7I52rybHm6iR0h
VqES5gehmrbp1zV0E6PEyVv9UuIDf5qvOq8UNrEWMxUHTzc+0KYKbf8htYml
d1EVtxTwQdOW7gSP4Cb25a735g35Q9Cx2PhfN9UmZrFcIEFW4ofJ/kYD0/IN
7IjWjb7ybwLwufdLd2jRBkY6vJg61yYAD7tD7pblbGBnadjq3DYFYKld1+VI
8gZ2KPKJ8Sd1Qdj60xgz7LuBiUjN8sf2CAJTaePAfY0N7IHGodeFR46AVHTj
w0c161i7npdDOo0wvNR2ol7H17EzLtO3DikKQ9/OwTeeBesY4zZ1q7S9MLy+
Y5kfmLqOtaw891TqF4YZ8Z3tlOfr2P7u8gGemmOQiYkFdKqsY6HmI1+GfxwH
4qMmXrPT61jwj1Pq6pvHwUjI+fOY1DoWraYiaaksCvtelTUt869jOLrItlUu
ClZ617lZdtYw5vjJ/G8dYrBXTHxUK1zDjtx/+y5fShK83onL131dw4wnb717
6ikJ7eebqy+nr2GKaXypcn8k4cVnvqnbkWuYlH99hJv9CRhx/i7j6rSG3S7M
0h8ykYJkhgEsS2YNI4s1fjpVKw1bxS8uy4muYZO/leK71qXB4IHEYKHgGibN
XyzOKSoDNC0upGqWNUykMWr7QqAMmL1nvjgws4qtluh/3jSUBUEp5Q7OT6uY
vRDv80tMJ0FbbzxCMmkVEzJSkTyndhJcHN7qa8SsYsW/5Vd73E7C74LpeseA
VazKRotuafwkuKnEYS3Wq1hseHzAzJ9T0KK3mxwmvorRmLjcYi1RgF2HT6YZ
QquYzPF4gd1tBRB9Z3iojHcVe6PNuZINp8GrM/vdPOMq1qd3dsW88jRImJv4
606vYD6aSfwWHYrg5/jzAdPnFSzbRVZESEIZvr6zFRdOWcE8pfkRP3dl6Ppx
YFw5bgX761aq2l6rDDI79ma2wStYzBpL6TUbBHr9Dl+pt1vBNG4HvhYuAlCI
9FH0P7GCCRBrGNzVVeBO4YnVhGMrWM1TzvxlBxUI7urM+cG/go1aHXpA/KgC
QwJyEuPMK1j70v25YZIqhKYP8WvOLWO0XelXF5pUYaJQnZb0dRk78LCSxP5C
DT6F5tc+TlvGjnFXy2dVqoHNveMh/R+Wsdr1AjI/rTpM7//vYEnwMiZ6Slc9
wk8d5h62SDnYLGM/FKwOnXijASvCd4wGji1j6bN8RK5uTcjfbhHU5V/GppfW
JStFz4NLi8ZoCecy1uf9UMrX9Tyse4s+iqJdxuQvaHCr82jBVtf8C93BJYy3
QLND8/4FoA73yimNW8JKWfzn1FUuQfn9BRfxiCXM+LXaa9bES+CLmiPRQUvY
EcLJn/JEHaCdOVfj6LGECYnkENPrdYB8nrlX/MYSRtfrvnYzXxeYdt8zxOxf
wp6fPtt08ake/GllbiT/t4Q5p/c7dhfqQUim91sn4hL2av9NNq01PWC9YSGg
t7iIybVtD1c56gNHrvgp+qZFTEaWnvmHuwEctC4ydQ5cxIS9hIuK865CdHW1
xn++i9h010jcAypD4BFuE0tyX8TeBA/Syl7c4/655d9Wi9hbLV+5rVFD4DYU
9hc+v4jtNAl2sopdB46zod9aaRexja4PWlcnb8Kb+Lh31tsLmHW6Cav0eSNg
3/nkQbW8gD0nKV+/l2YEbD9+aUgMLWDGFWc0qK1vAcuJrQ7fsgXs54JMujeV
MTAetKSR81zA9nckHXdRMoVAF4exGqcFTAMPSMhwNoV9bd4NxnYL2LiJ2o/i
HFNgCI19F3BrARtWpSYES5oBma5ZbPDMAiZ0wuTPhRN34KV5L4ur7AImuWxb
0W9/B+jKppaZxBawk7oKpo65d4D0hA5X5FnAClidf38Ec6BdVDIIW5vHRB4W
b8abWICvrtZpkbl5rJ/nm3LUJwsgfjY8VDo6jzW8b3T4urrH9x+NjbfNY6TE
eR2D8LtA3ZvqoZI7j22z09NNtFvCTi3bxzn7eUziob3S7wQruBwpnMtlNY99
no9CUjasINlCsRIxm8eK5PDHPw2sQYtgNhyoN4+13KbhbWW0gYiTX48el53H
rMOcdXcDbUEiXifFdGkOyw8ZP8Fw/yF42d7Jezk1h7k705+oj38IzYrOv7KH
5rBxQuvsTcpDcGmNG9lumcOUP0TfmNe2hwqGGeHo3Dmsd/qThA7yCIwcA1Ob
neYwlnbV4h5tB8hWjc9ft5vDtBP7lDjCHYCa5XuVgOUcljs2eFu3wwHSMjpH
7QznsIrV6OYpa0dY6hUV2acwh9WmRiiLxzrBuSxEQUZqb71bT/kYJ50g2k1P
87rIHDba6bnCccYZ0P1u91K55zCnotOc33ucgfNt2OUXC7NY8PJGS5acKxSf
KLRvHZjFPi93VN4IcgWz2v7QI39nMU8+pxzDUVfI2pVqxnJmsczyxMCrH9xA
zeqP3prDLHYzlaxIEPCAx8BocH91BrPfrHdivu8Jamex53dGZrCH0in9KwOe
wHnuUf6t1hlsM5qnyeaEFxRcaufRy5nBtHWF569/9oKtW8n9ig9mMGv66cjO
Am9oMDVkP3l7BrM5I8CouOMNcRYM6icuzmDmVFWLhWrPALV9mHZEbAaL/2vF
qdD6DHw9lB4wjk5jT8I8r38h+sIVr9l4Uts0Judyy/+bvi8I+yY2EyqnsfSI
TEeqZF+oDiCfWk6cxqTS06xjNZ/DfzEtW923pzHKAfIB20Q/iPhh45/dNoWx
nb9AJsW9AssS/uL0yiksOUnvWjHRHxR+Nk8nfZ/CUhazfx2z9YeOaoXLkWFT
WGQ2i4bS2QA41E7k9r40hf1VcteQpw2C2c788+7KU5jEfBCvvVsQ4L1W7o7i
UxjtsVuS8fNBYDba2HOfYQojmSjUE0aCIXUl9qPer0lMOCNpe/BxCLhs6PzT
zp3EBpMNbvzNCwGtHWr6c8mTGCfTgaMDGyEwRXvf5syzSUxCzn/T3i8UpPaf
lBVCJrFHJ/uuTH4KgwLZBnw5dwKj7PiOc518C1JcQZpsKRNYhciFohS/t5C2
od0oGTGBcTQ4fXhKeQuRP+t7LZ0msMKwU3OHfCLAWad+h3JqAnttKFdRNPIO
ZmQC/VaEJ7DPVQIp4mcj4S6nNhM71wQWmUV+wZ4QCVe76/i0V8cxASfE7aZp
FJyyrlMqzR/HzjWkMvosRcPnSwEVHanjmJ9571G9WzEgLHNBe/XdOFZ4i6RU
WxUDnOu1N6VcxrEzkbMtjQmxsOxX65aoMI51y9Ie2LGKg++JNQV+P8YwcZ9x
/VPiCSDu9wpNSh/DxmMO9H14kADJ989XY1Fj2HP1628Pfk+AN1I1/9ZcxzCL
z6+5b6KJ8Li0esVKcQzb9/detuvdJJhIePn0hegY1o4wnln8lgRmzzVJyTxj
WGu56U4SIRn0tKv3d2+MYl6KIpzYh2SQ6aiS0ykaxco8cFXr6Y+QUfKi2PrT
KPbk1xImoZYChxPOqb2MGcWYpKv1LsemAOu9Kv2f7qPYT8982WbdVJhb/vVI
VmkUG0mg3nerLg2yWX994SoZwaa9rgQv7ssEvdusWn2fRrBy7cA/VM8zYSXD
aDAtegQz9ZmUOUrIAiW1xf2KLiOYnI7jlz9bWVDtJOBuJDuCOZ/cnDYifwHr
cmuOo4dHMI3McrWii1+AiSU/a5plBPNUarTUevMFDNIv9j2dGcbaJAKTmI9+
hb5ON/WE9GHM5+oTy9or38BH5FfP/chh7Cdf7L6zH7+BsCOri8yLYWy6/lAx
18o3sGFKyyg3H8aiyr+6T8XkwBrayjzCP4y53r+0NrH2HVhTTnSIRgxhaYnO
LRXb+fB9we3xou8Q1l9WSj9qUQDX4Bdj8eMhzCeDtbf+TwHEtRvBxctDmOLo
pzxC+g8Q3eef/IBxCKth4yZ22RdBg2GrssLmIJYRtGI3PVYED5MF/hEmBrEf
C+kNu6bFkKecTx9WNYiZKOnwaN4oAdWHQ3bfnw1ioWqtzHrmGAwXnyA/sR/E
zntoOF2ZwuAlvXuCuskgllAxy6xzBoffiawtbcqDGFm29xdrDQ43WpHT62sD
mLP9di3V4k94rBhFgzwYwE5/GCY0+VbAmzcHu67eHsAWF2ds3ndWwPeZ998f
XBzAut3/Bf6WrYSVxESLBLEBTMeAv+DxWCW47MusIo71Y3i8ZuztO1UQZSEZ
z/evH7v5a1hguLIKCrEvLqd+9WOuThIOm8erYfNx7vF7yf3Yqq2nyMxKNTzt
Kg2oM+nHnuZF3wxKroW4UyrmQzr92KuavmeyHHWAhZQrbSP9GGeAsnTk8zog
qFdPS/L1Y3LL6oG5tvXgk9WkE0bpwxSi2nhn9H/Dy6dD7Nf1+jBfv+mMNaQJ
0trvTtmr9GEtAvpbZ/yaoEZmvMJfqg8Lint6O+x3EzCMTjsWM/VhQy1/eP3M
moHnw0w2RPRiiADx4OS7v3BUhUOh4UUPVk9rjVSdaYO7y9zjOxY9mEeB7fTA
2zZIS+eLllLrwRb86tq15ttAlO3YVjihB+t9ff4YU+Y/kBo8jd9w7cbqAnwM
a6UpoPjcWHPMqgtjERUXuO7dBTVrTz7evtCFXSKFz96Y6IJrNrHUrWJdGM8/
SbWvBt3gqE8p/jnVic1+OmVsKdEDXwT1pWPsOrGrzMJ9F2Z74VipBs+lRx3Y
XYsPF0o7+yFP2sK5Qq8D+/Z4ISL04ACoffRpUZTtwHwqliaOGg2AWSAefGyJ
gqkIXJqN6B2AuBuKNFROFOzeycbTpbODwLEqMZXj2o6dbPDekTw1AklW2udF
b7RjvayOux+fjYBMj1VKvGI7VhsxETX3ZwR0K1NNgjb/YcGjx/SJtqMQEC7Y
evfJP6zmePau8tcxoJbaX3rAuw1Ljax9E2s2CbP3tl57vmzBEniSNIZz56Dl
szTLpbstGJ5hfERtZg4Kl+6G8Kq1YNeumqkIHZsHX6+mkB+7f7Fy/133u9Hz
wBOZErro9BfjOvi3fNBvAdSqdMMtLZox/E11HK/zEkQe/Riho9qIXYzKMTDN
XAOfihhFWKvCMlbEJ5LXCejY79PhFgVV2KsiSNvmpUIvUf5NBrhUYaYG5e4X
USqUZ4b9ffvaL4yl5KBynR8V+oUrcNd+vRL7GBfBzchOjXZbeVQkb5Rji4dR
ypYwDarqyMNXV1iOYR/JL0Y1adA0zwLHebdyzHPIty3DigZ1eLMkjGyWYZY0
PhdzsmhQhlKbV/82f2IPA6JbwqSJqN3hwliODQw7a5lOLJOkRU/Lr1w0dcMw
/innO6oXaVGitsxu1kYpdtbrzDc3a1o0xjHD9NxmCaagzLPGkEqLVldHC7tt
FWG5tvYO9jwkNLy77d8vjyKs9+l0tMspEnp7ge0V+3Yh1hWhFnlMj4QuHwyY
zNz+gQmWG4DjSxJ6+IH7l96dfEzQ0Uksao6ETvvkm4p75mM0bpO9afR0aEHk
Ipvrbh5WFlZ99PJhOlSnzNqRjZCHtbOIHjLXo0M99hspqlN9xwRKGDnMsujQ
c6KRk6HeOdjxwZfPiOV0KBu0xPZQ5WBvOUvCpNvp0PR72rvO1N8wY0s7waNU
ZLStSKkig+YLlkg8YK1xkYzyupr1LDBmYwv+fHM/bpPRQLcLciFsnzGHox/p
vz4go9ZP+Ppq+TIxWju3HqEQMtrxlHTq3pFPGOmdj+CHD2RUy2s2gPZ4BsZ7
YoAc+ZmMivr8lEfl0jCG5zunqOrIaLRvRlD36VQsM1Pl0oN2MsrgFz7oBimY
6H/ynwyHyejES4vXuVrJ2Ea2oUr4Nhm94X9pWE83CfsjMxc5RKZHawPkz8xd
ScRsa4weZ7LTo+nB9KOipvGYLIzdij1Gj8oIDLuGNMRhEz6NPWVS9Cjbkfyj
de2xmMTNmxVGp+nRhaOvmmiHojHSkw+m91Xo0SaRm0/Q2UiMJzyUY0yTHv0i
JnHcfSMC2/+eV6Ndhx4NkdxtyaV9i1kWKFidvkqPPpRu8ppjCceC1AmEfUb0
qK5ckrgYbyimbVEeqm1KjxrbTXypuxSM3ak9kLttQY8ecggmq1j4Y/WUBYZD
VvRoj6uMSZ67H9bHlQxZtvToe8+2fLGwZ5hy1zLDp4f0aAHD8iHVy0+wyQuS
UlyP6VF5TuXf4k8dMce3PE/nHehR67MMm5JXrbHztpx/TjvRo43f5XLIJoYY
pZqVfm6PWxwyEZmvAKptb/g4nPfiO6uP68begX6pMvqUvXHdLzcqlRPsIVLX
sO2j417+yWyc+g6ucO7kp3fse/HTtS1kvyd5weeLn2xn7enRCY2fnUiQLzDG
tPmcfkCPiqrw+dY4vQQjNnnWBes9PWdcxQ1MAmFa6fq1A/fo0bZoK6tZoRCw
5lFNzb5Dj668iyz9fiAMdDXuGObepkc53/5ic2N6A/7mQQ2i1/fyC1u6CzQR
YPSvz5VFnx699vpwEXHtHXiUF/+7q02PugTqMtdORcE380xbSfU9f/wy8w3a
3gNroEE4+0l6tN2nYx9P3QdQbkYtZcTpUQ+U+GW2Nx7eejlvVhzey19Zhpjb
kggfw/PuaDLRo5JK5z9z/UkCS9qYJkUaerRU0eSaW00ynMDUZJNXyWiPfHAm
lKaAoQO7c28PGbU79fFqYkEqKKhPqOU0kdEduWICbU4aMGkmdFNVkNFDMhMG
takZUGFl9409lYwai2tsG4R+huOjctXHLcmoUmRK8Ep8NhBaEmacDcgo4zMa
Fu1rX2AyJCNEToWMjk/fSZi2/AqJER0ihANkNLFSqELqRQ6cYjsox15Gh4Zs
tgRSMX+HCi7tB3Sf6NCn0s+vNEd8h4Z69w2XcDr05vvhkccpuRB4Qu1Ilxkd
yuGYQp9fmQ9LNw19ujdJKPWnq80vLhbA9bdtP1f6SOhcHynmWmsBeIpeMY+r
JKEN2pbiG0M/QLLXaDghiIT6CYnoKBOL4V7g72eF3CR0a9yg1lQQhwRTiq4G
Hy26SMyS1LLAgS9F743xFhGd4KcNl0nHYbOYx06ik4i2X8m9SSP9E9g1parm
3hHR3J/7p5PRMuj/9/DCTaa9+zaqjXnMuAKYdv2qRuao0X7Na1fs4qqBNTPY
5uV7AooMe5g2dFfDWVm1fWZuBDTaO8FWnK8GRDzufVM0JKB6hRPPJ2JqIMQ4
N3qWhYCWiT3JuxtVCzm74udE6HchkSmRy/hNPSjxcGqc6NoCmYnlqWPqjYA/
TPnim7IGJgrkx//MG8HU8LPpXYs1CPbjWffzbYTZIlfud0JrMHEYaEfKG6Fd
PNVkKmkVEm++5EtWbYL9sQ1c4SkrwN7Ac0kAbYYrkRtqTCVLsJQN2dxnWiB8
8bW/wql5qBc7w/bwVguYeui+WN2ag6TUU45Vni2QdR6vVqiYA70PEmecKlpA
Nu5S6lmDOfgafLDq78VWqHDGjpGWZ8DOdrUn2KQNBOy6fwVgk6AxvqAy8qwN
ug7VXvW6NQl8FjPJyh/bQNdio9V9awLqjYatpsbbgKDBGfxceQJEtf+unH/8
D7yHd8qb6sZgVDSbidavHQ5PW2oGcI/sHe0Me6O0dhCai20J+TUMEYdTWnJq
24HDa+JmsOMwaPC8jzZjpkCM5OFZ67YhSKYPEMYjKRBGIfO8ShoEk7G7iPun
DsiWv1w+e78fFMzNEpobOsB7oNEWF+4H5r5bRNG5DqgyPZ7zYKgPSv8Z1LbL
dcIkq0SnmVkf8FWpXj1V2gn9H+3SGxt7oOPjIbv5xi6g6f5vX8SpTsgjZeql
LXSBs2zykbP1HRBueVremKMbDhy7fPLOnQ7QPm5AaDDshp3Dz15Mv6VAaear
sLSebihfsUou39cOCTlLecZTPTBF0HmiLN8KTzmexXAy9cLmuH2WyUAL3HBk
9mo40bu3yavyxcEtwCYvev7M417I/0SmYZr8C76Fxp2cG71QlNrXWfC1Gb6b
DO+O+PTB7dh/eXwOjXCYVfxR2Zs+eHdwmk9QuhFCfj4aev+xD/ySdvku9PwB
28OEGoOqPsB/n5jX7PoNwkM8YWUM/RA6Xm+Aztbv1femxLiD/ZCTGjOX6FIP
1OppTq7i/XDJkDq0haYeej+evCl1qR/4T9ZcDuSvg0hLXaG40H5wO7E1n2xd
AyTudxGuif3wVd3hcRt1DThUd5Ov5PTDjTg29dSYarh83Hp6X2s/NChfpmdp
rgKGyed5rtwD0HLTyt/08i9wtyvSvPJhAPLxX+d03paDKiybM2UPgJGTVM/V
8+XAwHLCu6p0ry4NOnH16U4ZRH5N/HG6ZwB6vptf5LMpg7ylV6KH+AYBWci/
I2XwE55Wlmv8Ex+E3aXeyjqWn6AesW0WojQIxIOUoXu/cWiRt4+hNhoE82wp
lmhtHBbcrjGORg+C750zVVNppVB4IUwkPmMQWALp9d2lS8Gbt17teuEgeDJO
XmwrKgGWUnhSRxkEWrWC4H+txSBJdWwmm3sI9s86Pr9yqAisXiz/cYkYgqkM
Pp35zXyQuXZiSjplCCQ4hdfN4vJhXeQ+eTJ3CPjkD9SrqObDy9ou9FbrECzc
rkmWDs6DlP8qvqpwDMNafdGO5qlcsOvZbtg4MgyhNYE6YYPf4WS2/ESO7N74
5uEt/rC9e1j302Fh/WHgvaN3dnkhB/rDw8IZwoZhlF+Ijbb8G6SZ12eXJwxD
XPxDgxnXb/DwJKne4+swxDvon1+V/gY7ba7E2cZhCPjGwG/48Svw8pg6/mUe
gSdrcYGUyC9wLf6EYWzQCDhety4buJ0FS3Q9pulxI9CjbhF1ZTATQh4E2uRl
j8Drz4hYx/1MqEHGvRubRuDV9o0Pyx6fQLE7MZPIOQogNSvyqjAd2tQu57Me
G4WtT/TKsZfS4VHm7s9DCqMgyH+08OlQGnxyN/qncGMUZCObpMP3p+3p4aS2
jRuF7bCs5OOBKVDgXcHolj0KvYIsn0ckUsBg/BHXC3wUbMH6h0LTRwgq+COe
MDAKnN9ONXjxfoSdq68MW4XHgKFrOnu8Igl6w7cylbPHoOKxSkOhYQJ4bGbk
a+Fj8NfDc/4vcwJw37leZtg0Bt/9hcoEa+JBVybvn/3iGEQE08ZpQDzgjQ+o
U+THwcP1wLjuozgwUjj0X47mOART3T2Ss/Qe1j7Uc+HXx+HKJ7u+E67vQfrB
cYkO93G4v9XvZfAyFhL/GzRkwsfhosgOi0FpNCCOoWYHm8aB6wf3TphuNHR0
ga3IwDjcAJEnqUNRwJ4Z+0yVOAHKmx53pdmiwFfrapaT5gS4p1qXznu/g7sv
aqh7GyfgVYVYeEvWGzBits6v6ZsAitb9A57Gb+DyO0ab73MTkGRPHDVhewNK
qTqtr1gmQS7XMy7PPRzYqlpT5XQnod5ZDBcyCgOyjrMRv8kkbFu1SNNwhcF2
Gzcrw8NJmHzz036xORTGRm669b6eBOLVXeq1i6FQQhrQ9v8zCTksiw0HdUPg
W7APlWPvJJRMW7xhYw+BNM6jecazk9CMKFsvZb2GMOF7/CeZp8CuTCbkQHkw
3NOYme+9NAXfcuMjs6mDgMNvI+Lk7ynoWLQmLDe+Agam2AsCPVMwMoM8SLN/
BbtvlQn7ZqYggPdZeSP7K5j46HW/779pODy4HnLP6CXglSSlgIvTEORhK7F/
xw/yLqbNOd6aBuXxwed/0v3gU+v5jya20yB+6RVL81U/iBgOZDoVNA0pK7VM
Md+fgw0te39f/TTErT8K+PLUF8yCvr+t65oGbkH5fH45XzDcf1Urb2oaZkYi
/mZP+IDq0aicAMYZiJKKzBW46QPc6vx+p7RnwI+hn6lW8xmU+4qJBdbNgNFW
7tlYfS9Q3H0bL9w5A3euNmud5fGCb64Ezp8TM6B6Sv+zT7knJNq1ElboZ4Hz
mmvUw5Gn8OyaZ5ux5izkqrIYmMETUBX/6y1bOQt+TiluxgpuUJiivNrQMgsX
fAjNhd2uIC2YZnNvaBbsE2u67/q6AktA6affVHPw2Ht/TGyrCxC8wiNoBOfg
dPmV7kU/Z+i7r2xjazwHKRHHohQFHYE3dSFF0XIOIsPTWu5QHODaUGo/3YM5
aJBzj3oT5gCNt9kME5/OAT83f/cWnQPg+qMq/97PgXoiKdRj5xF8UA7lUuma
gzuR7+f2cdlDh5uGHtPQHJRVO3+a634InAWbgZ2TcyB/t00g+eNDCJa5S+20
OQfkVvKQlfxDeHrszHQGzzxQq1SJaFbbwW3W4TKO6/NwI30+JRqzBmJ0y1KA
6Tywr8+7thlZQ8bhCmEaq3kI78cTQjatYFU2yX/ebR5GNt47WCpbQchVU73f
sfMgmn3dZb3pHpzq1fVV/zgPxnyhPt5u96DbEs0rzpqHv/xxPteF7oGoKz/P
p9J5SEk8RRhyt4TymO7+F33zcIHz+Inm03fBSqiBfXdsHn7+dnuqOWUBLFnF
6k7z86AT/xsZ+WABRqUx6ebUC/C5x83sOYMFrPRdt1cRWoAdB/Wcv1N3QES4
jbBpuQDrNOlu6/2m8PtzpcyjhwvgwW9/sTvZFBzlc83HXRagkDAslnLPFMo0
31T/e7UAHAlLpe0LJnDTWi/k+6cFOGn09K4JqwkEf/nNbze7AG3qkKg6ZgRy
p0svD68uACp8Yz3whRF0/MzyMSIsQosxb+YZESM49jdwVIt1EU7+C5X5YnsT
8GWt7GOyi2Di38BtSr4Bi4pVSL/TImxX3Lvs42IIv/S/qFc9XYTy4yebaqUM
IdImSjvLbxFsbmuUEieuAhJnfcM1YhGSL7EcVjW+Cv5ULE6seYtQP5hQ+Nzg
ChyuvpalsrwIzxcpJnaW+rDcp/L92Pbi3vnmenVDQh+q10WL/qNdggShrRK6
JT2wE9uupnAsQZto9bNoHz0oDE4YspdbAlZGg6PXPl2Gy1cmDiY+XgJj445l
8kFdELL7e/il+xJYc3Y0Zf7TgRW/4uN2PktQyrsk6uGmA7EFwfKK4UsgPyR4
KrX8EowdlNVv/rYERN/GY0V3LoLXgLs/9cISRI38l/rgnxbob5qHjq0vARO/
0dXH/logzHEp8jfVMvR5kxA7RAvq1QVSolmXwbT+1Hml9PPAnV7xU0Z6GZ69
UCP1vNKE7Af/rZs9XIYuIs0DXwcNmPortbrgsgzRZQufECkNEFUwWH7mvQxJ
afVqA1PqkEyImU8MW4Yxjlpi+z11iA4VmRj4vgz3beUJh63VwDfnbKfZ+jLc
Sfpo5B6hCmVclpQFqhUYf20npmusCrvu/v+eMazAw7ibE90iquCm1vQ38eAK
pNs++3ygVAUetN6uH1BeAe3mK5W1cyjcWHUtMXu2ApkFQjenxxF4d/N90YL/
Ckiuv9S1CEGgBcN/PAtfgU/pPwNoFBDQeUmXl5i8ApM3ta4m+iuD2oG3nwd+
rUCL3UV0XUkJTpz58sFs3yrIVmZnljSfBpsPf98vsK8C5YDft9pXpyGDZjXm
Ge8q+En8+FmmchqE6pUjEyVWQbGvm97yuwLw3KoLGdBZhfhx/QsiyfJA9Bzx
Nnuzuufvu8nFjJNg95jmimnsKhyR6b8v+/gktFsKiJgkrwJ58qgJl9JJyNS9
8fvW91UI6X5jVvFHDgwO/+a53rIKh7nLONx2ZCGpMjdHh2PvneXt6/jRWQYY
C5v9LvGuQSjLrqrKeRlw+jx7/eLeO8s55P21OwdlQOvdccIFuTXIX/fMkv0p
DQv33mtrGKyB8DVDp39s0qDK+HxY6c0a9Kw23k6MOgGZhMSCM7FrcMV7t19E
+wRwLpcGKCavgczZ2rsBu5Iw0b0mrfB9DRSLb32h3JOEsGybp7Ita/CSKa/7
sroEDOgZcIlyrEPY4Ucj3kfEQPuc/YQI7zqwetJFvxsQhbwzwSXHhNZBmOmd
oFmiKPgLVd85KrcO2mMX1xiFREFm5cwXAYN1+DBuZ/X0xHHwjjpynuvNOnhG
LqOMFsdAnO7j1nTMOgxv12++PHEM2h2Ev1QkrcPbHAH2txvCIKl7nOtRzjpk
XmnINggThg7SieH65nUglAgqqFUfBTkHRe9nrBvA23GM2l9bCHr7i+SuH9gA
tWXvSOAXAn8d5bETghswO0WvaLNwBPpEUZ1uqQ14W+h84mj0EQjqV+dT0N2A
ymrp2rmZwzBy6fKP6eAN6L2j4/A3UxBCi5ttKiI2wNghQN/YTxCURA0EYuI2
gJpP9OYlE0EIozV8ofl5Az557jy4vF8QoNjoSlLDBjCeQ883+AhA5PF789cY
N4Fwzphyd/AQXCB6Hq94tQlMc3R8UvsPgkmJYota2CbovVEv8GnnASenlaeV
0ZvQnmQS5BbLA4ljti2/Pm3CVTYfeS1hnr2628izpmETjNqnxJRVDkDyW8XW
36xbsFzjcWUgjAsKL6146vBswWvmrrrXxlzwh+6baOPhLXAQTXStEOeCDdfj
Xk2yW0Cvlq1UUs0Jure5xVqubIHUsezynyRO2BJe8aJEbYHRNZbCpigOYOv7
KnYjcQsEdtzNVOw44FiUbVtHxhYIb/yzFzzLAXr7hsW6irbA0/xHpsQMO6TN
/m3r6d6CwLa6av3z7HCl4Kv4kOA2YBca1+vZ2ODzedv2mfRtYHjv/raslRnm
wg5f6/m6Dc51NiNB0cwg0/XvX8OPbWi2syEOGDNDnp3qv8yabSBeyGLjn2IC
LJyrzWp8GyxUx9R/MTBBY/fPvyMiOzCvqbk/2ZgR2I4567dJ7UCmjMAfI3FG
MHgo/rdSYQeIlnElr9b3AYX6XXOy5g7QBRa/PvN2Hwwcs2kyu7cDBR6EI71N
DLBoz/mnJ3UHrnM6Kkkb08OporpLv7N3IMK6Z3+aDD24EL1/l+TvwP3qc9Pe
JHrYiphsiK3agamuyOwb2WQgFuP1N0Z3QF7Ar/45LRk4Sda1bcK7cPYf34Xl
MhIoRGOVvz/uQgzCMa7jQYQhyWyle593wYZGziTekAih5XE5VPm78LSs/p+6
LBEmpp4kyFXvgqIKp2bgJA3EgtKT6IldmCJ1nJ41pgGvR0Y8OVwE9IEl1nbF
kBralFpadw8SUPWKX7Zh8tR7/5d2qLYAAZWX+36Ii5saKDFnyCMiBLTw0L2h
ZQoVyFTyrHArEtAGDhPmZRMqGOaiND01IqDZzKXbJu4EUBrQDaozIaBOOQW7
dcYECMus1uS2IKBjc5U3HdQIgKgUYF9tCagka0iOGxMBIq3eZQ09JaDttvEu
0Vq7iFbJlVdaCQT0+EbUAHvRNvLZrBnlHCGg5RcKKu6NbyAf73tMXZogoK4t
quqn8Q0k9qFw5IsZApphL33a5N0G4v/UbXZthYA+qalCPmtsIBbRh+M66ahQ
Xj7dcLn0dYS3+dFm/HEq9KdN3N+9RyHCTuFNpUhQocrDJi0819cQhr5femwy
VGin6/A59OQasjbNk+GjSIUeKnKus5xZRf7Sl1+7e4EK1dzOfMFpvor4q7Dn
idlSoSm6LIlmRiuIt2aJqbk9Fbrp88s+QmkFcdGx/O+9IxXaSx4NYuBbQe7e
KjJnekqFrlCqb3ztWUZUXO+wzwdToeZmRMtx82Vk7UvOw7wvVOi18XLGVx5L
yF0BAzGVJSo0XlqofbNlAXk866YivUaFtjy4ItVdsoB4lSYYCm5RocxVPqlj
KQtIjNGsDxWRGq2+nBPh4bqANEb6d/1kp0YZu6QFXgssIKdZfwapylKjHRmK
6ZxO8wgjteTc2UfUaA5z+8E3SnPIgSYDkpwTNRrE4jBwSHQOEY535xVyo0ZF
6Nsu1HLNISpIjSbxGTWaeOkfiTg6izi5mSdUhFKjX5/kHOy6Nov0LkTrqX+l
Rn8eatSh1ZxBvg3S5WrMUaOHblqucVyeQhza634FLFGjd8335c1ITSHyDa/b
G9eo0eyhQWci6xRSnMe1dYOKBuVVyeEaaJpEKl8dO/uAjQbVih50vHZ1Emk/
ca7pnRwNWkRuaqm9P4HsuPtNj7nQoARqeumq/DEEf6i1K/GEBmW5cPubetwY
4mPBxPrYmwZN7+IpWfAdQ8g6EXLbr2jQr0rvdtv0xhDWwynurDE06GKv063S
uVFEqLqSXrGEBqXd6rxcLDeKaHHQCgdQEVH5TJRPqXMYOdKknviCloje2BjQ
UKkeRraC/A750hPRuvfs2ndzh5EsOjLXE1YimsatysAcMoywbDKQHwgSUUxi
2bBVYxhp7WeZ0FMhou7V3lWkwiHEJJv3M483EW24PEUVnzuInLa5Jcr1nIhG
cLnTKKcMImzH41LYXxHRs491ixcjBpHyRP4PjKFEtJ4jPD3LZRARjjgcshNP
RGtHXvRcUh5EJj1EHg3gRLQyjU3mSN0A4qQldyqDQIuyG/C/IK/1I7NnUxPD
iLTo8k9C6+/JfuSeMg+zO5kWzZnSu5re24/clCKMXWChReX4r7hEV/UjKGd9
1DQ/LSqrtTFxP7If2TdwZ1sKaNGMWuOeJOV+JN41vCL/CS3aENyaUPa2Dznw
mCQd702LfnwlBu0BfUiYjev7l89p0cQ1j7Qd7z7kubGx0/UgWrTL/JzXE7s+
xEpdTGQzlhbdjf+Yj2r2IXKs5QFIMS0qTNRfDdvuRWrSFvQqN2hR81aNyriZ
HmStirqIepcWTWdzlbvU3YMIj7IdQWlIaLnL5s6h+h7k2VHZxcJ9JPRHA8vU
kYweRCnxcfgXXhLa8ClRJM+yB/kSs/Q3BiGhd5snQ1rHupGeQqISRZWE3qdb
r3hO6Ub+6+BI5jxHQmui42MMarsRK+6TDqE6JJTzNW/IxcxuROitI8cLExL6
1mBYPc2+G4kMXjF49IyE3ryWGtZL1Y38yiKVZPuRUI1zxl2WS13Icj3n0Wl/
EgoT/g8YR7sQvX3yy5bhJPSiwtJoen0XwvjS+e2t5L34r/SsZaK6EC/vtVbN
XyRU6bwgzy35LuSew8ZVfgY6lEpal1ntRSeSdfPFcQ4mOjTC5Gt15ZNOZEGV
Y4vMRof+2CweNHLoRNxZJRMWDtChoWtM07WmnUjwZ9PJyuN0qJW59cFk5U4k
d6za0+Y8HdpSSEWtuN6BbPy5omd6kQ59l6WbTp7vQJD8AaGrl+lQSkCP9+RY
B1L9fKsGrtOhHnPK3tPtHUjXYSkO9vt0qFTZYlffjw6E+ta7tB8v6dCkZ2dK
nTw7kHNqQu6fA+lQf7T6u5dLBxIo9vViUggdSrj2sPO9fQeyf6N2ITCSDnWP
63/Kat6BiLzbUTJJ29Mfejuk63wHcqnJoolUTYcaG+SvL3N3IOEFC0mbdXRo
rfwDF3H2DqT9g6fT3B86dJA667Ljfx2IqV3UwY5/dKiK4uagMnUH4rCvwSJr
lA5d7LFTTZ+iIDHqchv6dGT0VQFRubeCgmRkGb4r3UdGuTi1vTMxClKw313u
OAsZpbd1qHtdSEHahn/a7XCTUcbvJUqRXygIi5/OYJooGV3gvHYi+z0F4Z95
5MV+goya6Esqi0VREMmrEXxPZcmoFJfHdPEbCnJBuNtQX4mMdvxmJQsGUhC/
X1b12xfJ6MiZD4sT7hTkrWTw/Xt6ZFRwlXuAzYWCJEd8Jf29SkZv8Szw6TpQ
kJ9319A0YzI6ft/UkMGWgmyR/HL17MlohXtmo4cxBdn3IF2vxJGMzpqwiVwy
oiA8/+pnj7mR0R7yt+dy1ymIfCq76PYzMqq0xSeH6lOQR+cS4lLf7OXTRB2k
p0lBvLMrzrBFkVHteDa1OnUKEsI11u7xnoyKkjqqrp2lIFmjkux6KWQ0NLSe
9xtCQYp19L4UZ5BRteyDA0+UKEhtvuPFY9lk9Am/ldFtRQoy9qL4xVY+Gc2i
j7hx6xQFWZ3tFbIsJqPbQWiLuxwFIV2jKWvCyaivtu/MZxkKckREayulhoz2
5+Ut6J2gIDIhtlGsv8moWDZ3S7kEBUHXQk55NJPRZoMNtfPiFOR29b+HlzvJ
aCCHxa/Q4xTEVmrzv+JeMspiRttoIEJBPCIPfRIe2tvfj/o3xY9REH+Cqmbo
GBk9LHvbgluYgkTdsxjenCKjQaGWk9xHKUha48tnd+f39NqOTEgIUZA8hUz+
puW9+K+fmxoeoSCV8X+Kz2yQUe7GIxffHqYgLeTF6yk7ZPQPc8unUUEKMviQ
c5WFhh7llex2v7THC+2n37jT0aOjVIVFNQIUhKByS3pk3x7rHbC6vsfM6V6/
dVno0YK/3c+3+SnIIdZk6yIOepSV7xBT3v/6k12ryMIH6NGMdCFqn//1L/dP
fAzho0cl/j4wNd/j/9ffjP7//ub/A3B91kE=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  Frame->True,
  FrameLabel->{{
     FormBox[
      RowBox[{"p", "(", 
        RowBox[{"cos", "(", "\[Theta]", ")"}], ")"}], TraditionalForm], ""}, {
    
     FormBox["\[Theta]", TraditionalForm], 
     FormBox[
     "\"Gegenbauer Scattering, G = 0.5, a = 1, 3, 5\"", TraditionalForm]}},
  Method->{},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.590387574516795*^9, 3.590387692871821*^9}, 
   3.590387729892646*^9},ExpressionUUID->"9fc6d20b-44b6-4cc8-87c2-\
d18894e3f999"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Normalization condition", "Subsection",
 CellChangeTimes->{{3.5857345571838017`*^9, 
  3.585734561374476*^9}},ExpressionUUID->"72f2b095-7c5f-4c48-bbdb-\
81ac4fcffe84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"2", " ", "Pi", " ", 
    RowBox[{"pGegenbauer", "[", 
     RowBox[{"u", ",", "g", ",", "a"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "\[LessEqual]", "g", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"a", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5804972774101477`*^9, 3.5804972882721663`*^9}, {
   3.5804973256745234`*^9, 3.580497332822358*^9}, 3.585734540792532*^9, {
   3.585792569006414*^9, 3.585792569624516*^9}, {3.585794088595195*^9, 
   3.585794104477777*^9}, {3.585807904093507*^9, 3.585807910114325*^9}, {
   3.585809209623959*^9, 
   3.58580924983652*^9}},ExpressionUUID->"975f9e53-dc4b-4a73-af4a-\
d14ca5eb2069"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.580497320407785*^9, 3.580497357439238*^9}, 
   3.5836021540487022`*^9, 3.585734589431735*^9, 3.5857925733273573`*^9, {
   3.5857940970837812`*^9, 3.5857941056033697`*^9}, {3.585807910535578*^9, 
   3.585807925779359*^9}, 3.585809221928403*^9, {3.585809252602372*^9, 
   3.585809278170803*^9}},ExpressionUUID->"7a29dc8a-81e7-406f-bffc-\
ec21a3b41629"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Mean cosine (g)", "Subsection",
 CellChangeTimes->{{3.646182560760117*^9, 
  3.646182564061851*^9}},ExpressionUUID->"8ba2e4f6-3e80-4dce-b621-\
c8f4fcfd99a0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"2", " ", "Pi", " ", "u", " ", 
    RowBox[{"pGegenbauer", "[", 
     RowBox[{"u", ",", "g", ",", "a"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "\[LessEqual]", "g", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"a", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.585794296648469*^9, 3.5857943081337357`*^9}, {
  3.5858079533361*^9, 3.585807960405753*^9}, {3.585809286414545*^9, 
  3.58580928823302*^9}},ExpressionUUID->"da8786a2-b759-4b70-85ab-\
9fb72c6eb933"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "g"}], ")"}], 
     RowBox[{"2", " ", "a"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "a", " ", "g"}], "+", 
      SuperscriptBox["g", "2"]}], ")"}]}], "-", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "g"}], ")"}], 
     RowBox[{"2", " ", "a"}]], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"2", " ", "a", " ", "g"}], "+", 
      SuperscriptBox["g", "2"]}], ")"}]}]}], 
  RowBox[{"2", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", "g", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "g"}], ")"}], 
      RowBox[{"2", " ", "a"}]], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "g"}], ")"}], 
      RowBox[{"2", " ", "a"}]]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.585794297768673*^9, 3.585794309433585*^9}, 
   3.58580796170224*^9, 
   3.585809291736413*^9},ExpressionUUID->"645214be-34ff-4305-bc85-\
7b5bc70577d2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Legendre expansion coefficients", "Subsection",
 CellChangeTimes->{{3.585735923934791*^9, 
  3.585735934954905*^9}},ExpressionUUID->"2841c36b-6524-4abe-ad64-\
d59e2ccb99df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "Pi", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", "k"}], "+", "1"}], ")"}], " ", 
     RowBox[{"pGegenbauer", "[", 
      RowBox[{"u", ",", "g", ",", "a"}], "]"}], 
     RowBox[{"LegendreP", "[", 
      RowBox[{"k", ",", "u"}], "]"}]}], "/.", 
    RowBox[{"k", "\[Rule]", "0"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"u", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "\[LessEqual]", "g", "\[LessEqual]", "1"}], "&&", 
     RowBox[{"a", ">", "0"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.585735169473648*^9, 3.58573525229256*^9}, {
  3.585735299292266*^9, 3.585735319484174*^9}, {3.585735500932254*^9, 
  3.5857355205016003`*^9}, {3.58573588964979*^9, 3.585735892553597*^9}, {
  3.585735971896019*^9, 3.5857359817039433`*^9}, {3.585791715396834*^9, 
  3.585791716061214*^9}, {3.5857925941483994`*^9, 3.585792644871674*^9}, {
  3.585794158741482*^9, 3.585794166466812*^9}, {3.5857958679846363`*^9, 
  3.585795870231077*^9}, {3.5858080955210533`*^9, 3.585808112986875*^9}, {
  3.5858096823030443`*^9, 
  3.585809696895845*^9}},ExpressionUUID->"4e3a9340-6be4-4e2e-b3a4-\
20e6ccf78c0b"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{
  3.58580969935494*^9},ExpressionUUID->"abfc7d0a-15c1-4236-9fda-beccc39c516e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"2", "Pi", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", "k"}], "+", "1"}], ")"}], " ", 
      RowBox[{"pGegenbauer", "[", 
       RowBox[{"u", ",", "g", ",", "a"}], "]"}], 
      RowBox[{"LegendreP", "[", 
       RowBox[{"k", ",", "u"}], "]"}]}], "/.", 
     RowBox[{"k", "\[Rule]", "3"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"u", ",", 
      RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
    RowBox[{"Assumptions", "\[Rule]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "1"}], "\[LessEqual]", "g", "\[LessEqual]", "1"}], "&&", 
      RowBox[{"a", ">", "0"}]}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.585735910562262*^9, 3.585735915870997*^9}, {
   3.5857359737844973`*^9, 3.585735979510751*^9}, {3.585791718783778*^9, 
   3.585791719654888*^9}, {3.585792595605483*^9, 3.585792603698243*^9}, {
   3.5857926542745953`*^9, 3.585792667579422*^9}, 3.585792701418066*^9, {
   3.585794178040976*^9, 3.585794180651187*^9}, {3.585808119876946*^9, 
   3.585808136561626*^9}, {3.5858081825210657`*^9, 3.585808195468272*^9}, {
   3.585809704850749*^9, 3.5858097313787746`*^9}, {3.585809809143084*^9, 
   3.585809809253435*^9}},ExpressionUUID->"754142c7-e3ce-485a-8f88-\
7b4dd0afd48f"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"7", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"24", " ", 
        SuperscriptBox["a", "2"], " ", 
        SuperscriptBox["g", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["g", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "g"}], ")"}], 
           RowBox[{"2", " ", "a"}]], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "g"}], ")"}], 
           RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"(", 
         RowBox[{"5", "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["g", "2"]}], "+", 
          RowBox[{"3", " ", 
           SuperscriptBox["g", "4"]}], "+", 
          RowBox[{"5", " ", 
           SuperscriptBox["g", "6"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "g"}], ")"}], 
           RowBox[{"2", " ", "a"}]], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "g"}], ")"}], 
           RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
       RowBox[{"8", " ", 
        SuperscriptBox["a", "3"], " ", 
        SuperscriptBox["g", "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "g"}], ")"}], 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "g"}], ")"}], 
           RowBox[{"2", " ", "a"}]]}], ")"}]}], "+", 
       RowBox[{"2", " ", "a", " ", "g", " ", 
        RowBox[{"(", 
         RowBox[{"15", "+", 
          RowBox[{"14", " ", 
           SuperscriptBox["g", "2"]}], "+", 
          RowBox[{"15", " ", 
           SuperscriptBox["g", "4"]}]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "-", "g"}], ")"}], 
           RowBox[{"2", " ", "a"}]], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "g"}], ")"}], 
           RowBox[{"2", " ", "a"}]]}], ")"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"8", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "a"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "a"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "a"}], ")"}], " ", 
     SuperscriptBox["g", "3"], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "g"}], ")"}], 
        RowBox[{"2", " ", "a"}]], "-", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "g"}], ")"}], 
        RowBox[{"2", " ", "a"}]]}], ")"}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.5857359110105343`*^9, 3.585735916074494*^9}, 
   3.585735986759571*^9, 3.585791720174515*^9, 3.585792659524724*^9, {
   3.5857926950693483`*^9, 3.585792704555306*^9}, 3.58579418186343*^9, {
   3.585808124532527*^9, 3.585808137907956*^9}, {3.5858081838319197`*^9, 
   3.5858081976464643`*^9}, {3.5858097098768263`*^9, 3.585809739435451*^9}, 
   3.585809820240583*^9},ExpressionUUID->"345d5412-109a-4a70-91e6-\
e8e588351f53"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["sampling", "Subsection",
 CellChangeTimes->{{3.585806809895074*^9, 
  3.5858068105818977`*^9}},ExpressionUUID->"bb2cb181-c8cb-473f-967f-\
85d53399f7b8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"-", "0.8"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   RowBox[{"-", "1.2"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"Histogram", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        FractionBox[
         RowBox[{"1", "+", 
          SuperscriptBox["g", "2"], "-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"#", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "-", "g"}], ")"}], 
               RowBox[{
                RowBox[{"-", "2"}], " ", "a"}]]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "#"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{"1", "+", "g"}], ")"}], 
               RowBox[{
                RowBox[{"-", "2"}], " ", "a"}]]}]}], ")"}], 
           RowBox[{
            RowBox[{"-", "1"}], "/", "a"}]]}], 
         RowBox[{"2", " ", "g"}]], "&"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"RandomReal", "[", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "100000"}], "}"}]}], "]"}]}], "]"}], 
     ",", "100", ",", "\"\<PDF\>\""}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"2", " ", "Pi", " ", 
      RowBox[{"pGegenbauer", "[", 
       RowBox[{"u", ",", "g", ",", "a"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"u", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{"g", ",", "a"}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.585807047933585*^9, 3.5858072174844837`*^9}, {
  3.5858074522836037`*^9, 3.58580749042299*^9}, {3.585808408830674*^9, 
  3.585808456029364*^9}, {3.585810378263604*^9, 
  3.585810454273361*^9}},ExpressionUUID->"0003d54e-7b68-43ff-98eb-\
f15b7f20c073"],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
    EdgeForm[Opacity[0.]], {}, 
    {RGBColor[0.798413061722744, 0.824719615472648, 0.968322270542458], 
     EdgeForm[Opacity[0.]], 
     RectangleBox[{-1., 0}, 
      NCache[{-0.98, Rational[501, 2000]}, {-0.98, 0.2505}],
      RoundingRadius->0], 
     RectangleBox[{-0.98, 0}, 
      NCache[{-0.96, Rational[149, 500]}, {-0.96, 0.298}],
      RoundingRadius->0], 
     RectangleBox[{-0.96, 0}, 
      NCache[{-0.94, Rational[339, 1000]}, {-0.94, 0.339}],
      RoundingRadius->0], 
     RectangleBox[{-0.94, 0}, 
      NCache[{-0.92, Rational[327, 1000]}, {-0.92, 0.327}],
      RoundingRadius->0], 
     RectangleBox[{-0.92, 0}, 
      NCache[{-0.9, Rational[691, 2000]}, {-0.9, 0.3455}],
      RoundingRadius->0], 
     RectangleBox[{-0.9, 0}, 
      NCache[{-0.88, Rational[343, 1000]}, {-0.88, 0.343}],
      RoundingRadius->0], 
     RectangleBox[{-0.88, 0}, 
      NCache[{-0.86, Rational[723, 2000]}, {-0.86, 0.3615}],
      RoundingRadius->0], 
     RectangleBox[{-0.86, 0}, 
      NCache[{-0.84, Rational[177, 500]}, {-0.84, 0.354}],
      RoundingRadius->0], 
     RectangleBox[{-0.84, 0}, 
      NCache[{-0.82, Rational[717, 2000]}, {-0.82, 0.3585}],
      RoundingRadius->0], 
     RectangleBox[{-0.82, 0}, 
      NCache[{-0.8, Rational[183, 500]}, {-0.8, 0.366}],
      RoundingRadius->0], 
     RectangleBox[{-0.8, 0}, 
      NCache[{-0.78, Rational[757, 2000]}, {-0.78, 0.3785}],
      RoundingRadius->0], 
     RectangleBox[{-0.78, 0}, 
      NCache[{-0.76, Rational[401, 1000]}, {-0.76, 0.401}],
      RoundingRadius->0], 
     RectangleBox[{-0.76, 0}, 
      NCache[{-0.74, Rational[389, 1000]}, {-0.74, 0.389}],
      RoundingRadius->0], 
     RectangleBox[{-0.74, 0}, 
      NCache[{-0.72, Rational[427, 1000]}, {-0.72, 0.427}],
      RoundingRadius->0], 
     RectangleBox[{-0.72, 0}, 
      NCache[{-0.7, Rational[411, 1000]}, {-0.7, 0.411}],
      RoundingRadius->0], 
     RectangleBox[{-0.7, 0}, 
      NCache[{-0.68, Rational[33, 80]}, {-0.68, 0.4125}],
      RoundingRadius->0], 
     RectangleBox[{-0.68, 0}, 
      NCache[{-0.66, Rational[827, 2000]}, {-0.66, 0.4135}],
      RoundingRadius->0], 
     RectangleBox[{-0.66, 0}, 
      NCache[{-0.64, Rational[803, 2000]}, {-0.64, 0.4015}],
      RoundingRadius->0], 
     RectangleBox[{-0.64, 0}, 
      NCache[{-0.62, Rational[839, 2000]}, {-0.62, 0.4195}],
      RoundingRadius->0], 
     RectangleBox[{-0.62, 0}, 
      NCache[{-0.6, Rational[113, 250]}, {-0.6, 0.452}],
      RoundingRadius->0], 
     RectangleBox[{-0.6, 0}, 
      NCache[{-0.58, Rational[171, 400]}, {-0.58, 0.4275}],
      RoundingRadius->0], 
     RectangleBox[{-0.58, 0}, 
      NCache[{-0.56, Rational[453, 1000]}, {-0.56, 0.453}],
      RoundingRadius->0], 
     RectangleBox[{-0.56, 0}, 
      NCache[{-0.54, Rational[889, 2000]}, {-0.54, 0.4445}],
      RoundingRadius->0], 
     RectangleBox[{-0.54, 0}, 
      NCache[{-0.52, Rational[453, 1000]}, {-0.52, 0.453}],
      RoundingRadius->0], 
     RectangleBox[{-0.52, 0}, 
      NCache[{-0.5, Rational[863, 2000]}, {-0.5, 0.4315}],
      RoundingRadius->0], 
     RectangleBox[{-0.5, 0}, 
      NCache[{-0.48, Rational[939, 2000]}, {-0.48, 0.4695}],
      RoundingRadius->0], 
     RectangleBox[{-0.48, 0}, 
      NCache[{-0.46, Rational[93, 200]}, {-0.46, 0.465}],
      RoundingRadius->0], 
     RectangleBox[{-0.46, 0}, 
      NCache[{-0.44, Rational[469, 1000]}, {-0.44, 0.469}],
      RoundingRadius->0], 
     RectangleBox[{-0.44, 0}, 
      NCache[{-0.42, Rational[949, 2000]}, {-0.42, 0.4745}],
      RoundingRadius->0], 
     RectangleBox[{-0.42, 0}, 
      NCache[{-0.4, Rational[231, 500]}, {-0.4, 0.462}],
      RoundingRadius->0], 
     RectangleBox[{-0.4, 0}, 
      NCache[{-0.38, Rational[191, 400]}, {-0.38, 0.4775}],
      RoundingRadius->0], 
     RectangleBox[{-0.38, 0}, 
      NCache[{-0.36, Rational[249, 500]}, {-0.36, 0.498}],
      RoundingRadius->0], 
     RectangleBox[{-0.36, 0}, 
      NCache[{-0.34, Rational[927, 2000]}, {-0.34, 0.4635}],
      RoundingRadius->0], 
     RectangleBox[{-0.34, 0}, 
      NCache[{-0.32, Rational[971, 2000]}, {-0.32, 0.4855}],
      RoundingRadius->0], 
     RectangleBox[{-0.32, 0}, 
      NCache[{-0.3, Rational[961, 2000]}, {-0.3, 0.4805}],
      RoundingRadius->0], 
     RectangleBox[{-0.3, 0}, 
      NCache[{-0.28, Rational[191, 400]}, {-0.28, 0.4775}],
      RoundingRadius->0], 
     RectangleBox[{-0.28, 0}, 
      NCache[{-0.26, Rational[991, 2000]}, {-0.26, 0.4955}],
      RoundingRadius->0], 
     RectangleBox[{-0.26, 0}, 
      NCache[{-0.24, Rational[983, 2000]}, {-0.24, 0.4915}],
      RoundingRadius->0], 
     RectangleBox[{-0.24, 0}, 
      NCache[{-0.22, Rational[97, 200]}, {-0.22, 0.485}],
      RoundingRadius->0], 
     RectangleBox[{-0.22, 0}, 
      NCache[{-0.2, Rational[473, 1000]}, {-0.2, 0.473}],
      RoundingRadius->0], 
     RectangleBox[{-0.2, 0}, 
      NCache[{-0.18, Rational[523, 1000]}, {-0.18, 0.523}],
      RoundingRadius->0], 
     RectangleBox[{-0.18, 0}, 
      NCache[{-0.16, Rational[499, 1000]}, {-0.16, 0.499}],
      RoundingRadius->0], 
     RectangleBox[{-0.16, 0}, 
      NCache[{-0.14, Rational[489, 1000]}, {-0.14, 0.489}],
      RoundingRadius->0], 
     RectangleBox[{-0.14, 0}, 
      NCache[{-0.12, Rational[63, 125]}, {-0.12, 0.504}],
      RoundingRadius->0], 
     RectangleBox[{-0.12, 0}, 
      NCache[{-0.1, Rational[523, 1000]}, {-0.1, 0.523}],
      RoundingRadius->0], 
     RectangleBox[{-0.1, 0}, 
      NCache[{-0.08, Rational[1009, 2000]}, {-0.08, 0.5045}],
      RoundingRadius->0], 
     RectangleBox[{-0.08, 0}, 
      NCache[{-0.06, Rational[121, 250]}, {-0.06, 0.484}],
      RoundingRadius->0], 
     RectangleBox[{-0.06, 0}, 
      NCache[{-0.04, Rational[987, 2000]}, {-0.04, 0.4935}],
      RoundingRadius->0], 
     RectangleBox[{-0.04, 0}, 
      NCache[{-0.02, Rational[523, 1000]}, {-0.02, 0.523}],
      RoundingRadius->0], 
     RectangleBox[{-0.02, 0}, NCache[{0., Rational[67, 125]}, {0., 0.536}],
      RoundingRadius->0], 
     RectangleBox[{0., 0}, NCache[{0.02, Rational[493, 1000]}, {0.02, 0.493}],
      
      RoundingRadius->0], 
     RectangleBox[{0.02, 0}, NCache[{0.04, Rational[13, 25]}, {0.04, 0.52}],
      RoundingRadius->0], 
     RectangleBox[{0.04, 0}, 
      NCache[{0.06, Rational[541, 1000]}, {0.06, 0.541}],
      RoundingRadius->0], 
     RectangleBox[{0.06, 0}, 
      NCache[{0.08, Rational[1091, 2000]}, {0.08, 0.5455}],
      RoundingRadius->0], 
     RectangleBox[{0.08, 0}, 
      NCache[{0.1, Rational[1087, 2000]}, {0.1, 0.5435}],
      RoundingRadius->0], 
     RectangleBox[{0.1, 0}, NCache[{0.12, Rational[267, 500]}, {0.12, 0.534}],
      
      RoundingRadius->0], 
     RectangleBox[{0.12, 0}, NCache[{0.14, Rational[53, 100]}, {0.14, 0.53}],
      RoundingRadius->0], 
     RectangleBox[{0.14, 0}, 
      NCache[{0.16, Rational[1063, 2000]}, {0.16, 0.5315}],
      RoundingRadius->0], 
     RectangleBox[{0.16, 0}, NCache[{0.18, Rational[139, 250]}, {0.18, 0.556}],
      RoundingRadius->0], 
     RectangleBox[{0.18, 0}, 
      NCache[{0.2, Rational[1079, 2000]}, {0.2, 0.5395}],
      RoundingRadius->0], 
     RectangleBox[{0.2, 0}, 
      NCache[{0.22, Rational[1117, 2000]}, {0.22, 0.5585}],
      RoundingRadius->0], 
     RectangleBox[{0.22, 0}, 
      NCache[{0.24, Rational[207, 400]}, {0.24, 0.5175}],
      RoundingRadius->0], 
     RectangleBox[{0.24, 0}, 
      NCache[{0.26, Rational[557, 1000]}, {0.26, 0.557}],
      RoundingRadius->0], 
     RectangleBox[{0.26, 0}, NCache[{0.28, Rational[41, 80]}, {0.28, 0.5125}],
      
      RoundingRadius->0], 
     RectangleBox[{0.28, 0}, NCache[{0.3, Rational[559, 1000]}, {0.3, 0.559}],
      
      RoundingRadius->0], 
     RectangleBox[{0.3, 0}, 
      NCache[{0.32, Rational[1149, 2000]}, {0.32, 0.5745}],
      RoundingRadius->0], 
     RectangleBox[{0.32, 0}, 
      NCache[{0.34, Rational[553, 1000]}, {0.34, 0.553}],
      RoundingRadius->0], 
     RectangleBox[{0.34, 0}, NCache[{0.36, Rational[107, 200]}, {0.36, 0.535}],
      RoundingRadius->0], 
     RectangleBox[{0.36, 0}, 
      NCache[{0.38, Rational[531, 1000]}, {0.38, 0.531}],
      RoundingRadius->0], 
     RectangleBox[{0.38, 0}, NCache[{0.4, Rational[577, 1000]}, {0.4, 0.577}],
      
      RoundingRadius->0], 
     RectangleBox[{0.4, 0}, 
      NCache[{0.42, Rational[1107, 2000]}, {0.42, 0.5535}],
      RoundingRadius->0], 
     RectangleBox[{0.42, 0}, 
      NCache[{0.44, Rational[1083, 2000]}, {0.44, 0.5415}],
      RoundingRadius->0], 
     RectangleBox[{0.44, 0}, 
      NCache[{0.46, Rational[1077, 2000]}, {0.46, 0.5385}],
      RoundingRadius->0], 
     RectangleBox[{0.46, 0}, NCache[{0.48, Rational[69, 125]}, {0.48, 0.552}],
      
      RoundingRadius->0], 
     RectangleBox[{0.48, 0}, 
      NCache[{0.5, Rational[1173, 2000]}, {0.5, 0.5865}],
      RoundingRadius->0], 
     RectangleBox[{0.5, 0}, 
      NCache[{0.52, Rational[1123, 2000]}, {0.52, 0.5615}],
      RoundingRadius->0], 
     RectangleBox[{0.52, 0}, 
      NCache[{0.54, Rational[1109, 2000]}, {0.54, 0.5545}],
      RoundingRadius->0], 
     RectangleBox[{0.54, 0}, 
      NCache[{0.56, Rational[229, 400]}, {0.56, 0.5725}],
      RoundingRadius->0], 
     RectangleBox[{0.56, 0}, 
      NCache[{0.58, Rational[1093, 2000]}, {0.58, 0.5465}],
      RoundingRadius->0], 
     RectangleBox[{0.58, 0}, NCache[{0.6, Rational[9, 16]}, {0.6, 0.5625}],
      RoundingRadius->0], 
     RectangleBox[{0.6, 0}, NCache[{0.62, Rational[227, 400]}, {0.62, 0.5675}],
      RoundingRadius->0], 
     RectangleBox[{0.62, 0}, 
      NCache[{0.64, Rational[239, 400]}, {0.64, 0.5975}],
      RoundingRadius->0], 
     RectangleBox[{0.64, 0}, 
      NCache[{0.66, Rational[1179, 2000]}, {0.66, 0.5895}],
      RoundingRadius->0], 
     RectangleBox[{0.66, 0}, 
      NCache[{0.68, Rational[1147, 2000]}, {0.68, 0.5735}],
      RoundingRadius->0], 
     RectangleBox[{0.68, 0}, NCache[{0.7, Rational[591, 1000]}, {0.7, 0.591}],
      
      RoundingRadius->0], 
     RectangleBox[{0.7, 0}, 
      NCache[{0.72, Rational[1093, 2000]}, {0.72, 0.5465}],
      RoundingRadius->0], 
     RectangleBox[{0.72, 0}, 
      NCache[{0.74, Rational[609, 1000]}, {0.74, 0.609}],
      RoundingRadius->0], 
     RectangleBox[{0.74, 0}, NCache[{0.76, Rational[289, 500]}, {0.76, 0.578}],
      RoundingRadius->0], 
     RectangleBox[{0.76, 0}, NCache[{0.78, Rational[299, 500]}, {0.78, 0.598}],
      RoundingRadius->0], 
     RectangleBox[{0.78, 0}, NCache[{0.8, Rational[567, 1000]}, {0.8, 0.567}],
      
      RoundingRadius->0], 
     RectangleBox[{0.8, 0}, 
      NCache[{0.82, Rational[1151, 2000]}, {0.82, 0.5755}],
      RoundingRadius->0], 
     RectangleBox[{0.82, 0}, NCache[{0.84, Rational[9, 16]}, {0.84, 0.5625}],
      RoundingRadius->0], 
     RectangleBox[{0.84, 0}, 
      NCache[{0.86, Rational[1183, 2000]}, {0.86, 0.5915}],
      RoundingRadius->0], 
     RectangleBox[{0.86, 0}, NCache[{0.88, Rational[139, 250]}, {0.88, 0.556}],
      RoundingRadius->0], 
     RectangleBox[{0.88, 0}, 
      NCache[{0.9, Rational[1193, 2000]}, {0.9, 0.5965}],
      RoundingRadius->0], 
     RectangleBox[{0.9, 0}, NCache[{0.92, Rational[77, 125]}, {0.92, 0.616}],
      RoundingRadius->0], 
     RectangleBox[{0.92, 0}, NCache[{0.94, Rational[5, 8]}, {0.94, 0.625}],
      RoundingRadius->0], 
     RectangleBox[{0.94, 0}, NCache[{0.96, Rational[76, 125]}, {0.96, 0.608}],
      
      RoundingRadius->0], 
     RectangleBox[{0.96, 0}, NCache[{0.98, Rational[289, 500]}, {0.98, 0.578}],
      RoundingRadius->0], 
     RectangleBox[{0.98, 0}, NCache[{1., Rational[1181, 2000]}, {1., 0.5905}],
      
      RoundingRadius->0]}, {}, {}}, {{}, {}, 
    {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
w/pyUrrEfwMGD9bO
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{-1., 0},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  ImageSize->{593.15234375, Automatic},
  PlotRange->{{-1., 1.}, {All, All}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.1]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.585807133506833*^9, 3.585807217939271*^9}, {
  3.5858074611263723`*^9, 3.5858074909093723`*^9}, {3.585808426442506*^9, 
  3.585808456859002*^9}, {3.585810387447052*^9, 
  3.585810455020803*^9}},ExpressionUUID->"b5e77554-24e2-4f38-b771-\
877bad095673"]
}, Open  ]],

Cell["\<\
When cosine u has been sampled with random variable \[Xi], what is the PDF at \
the sampled direction in terms of \[Xi]?\
\>", "Text",
 CellChangeTimes->{{3.796755431481255*^9, 
  3.796755460226993*^9}},ExpressionUUID->"c231b664-da59-4596-abd7-\
ed8f1b20b2e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"pGegenbauer", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{"1", "+", 
         SuperscriptBox["g", "2"], "-", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"#", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "-", "g"}], ")"}], 
              RowBox[{
               RowBox[{"-", "2"}], " ", "a"}]]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "#"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"1", "+", "g"}], ")"}], 
              RowBox[{
               RowBox[{"-", "2"}], " ", "a"}]]}]}], ")"}], 
          RowBox[{
           RowBox[{"-", "1"}], "/", "a"}]]}], 
        RowBox[{"2", " ", "g"}]], "&"}], "[", "\[Xi]", "]"}], ",", "g", ",", 
     "a"}], "]"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"a", ">", "0"}], "&&", 
     RowBox[{
      RowBox[{"-", "1"}], "<", "g", "<", "1"}], "&&", 
     RowBox[{"0", "<", "\[Xi]", "<", "1"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.796755247438055*^9, 3.796755264935107*^9}, {
   3.79675542112886*^9, 3.796755424589568*^9}, {3.796773640585567*^9, 
   3.796773692828994*^9}, {3.7967737607942867`*^9, 3.796773781282094*^9}, 
   3.796773859236044*^9},
 CellLabel->
  "In[541]:=",ExpressionUUID->"d5fabf53-be1d-45bd-9110-c4d18c267c4e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"a", " ", "g", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "g"}], ")"}], 
           RowBox[{
            RowBox[{"-", "2"}], " ", "a"}]]}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "\[Xi]"}], ")"}]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", "g"}], ")"}], 
          RowBox[{
           RowBox[{"-", "2"}], " ", "a"}]], " ", "\[Xi]"}]}], ")"}], 
      RowBox[{
       RowBox[{"-", "1"}], "/", "a"}]], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", "a"}]]}], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "g"}], ")"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "a"}]], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", "g"}], ")"}], 
      RowBox[{
       RowBox[{"-", "2"}], " ", "a"}]]}], ")"}], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.796755248619619*^9, 3.796755265434513*^9}, 
   3.796755425108109*^9, {3.796773670575568*^9, 3.79677369351292*^9}, 
   3.796773783583646*^9, 3.796773866236348*^9},
 CellLabel->
  "Out[541]=",ExpressionUUID->"ec2208ee-cffc-40ae-8563-d9b9d91ecc60"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 672},
WindowMargins->{{Automatic, 52}, {Automatic, 4}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"12.1 for Mac OS X x86 (64-bit) (June 19, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b28e3d2e-c495-418b-a81e-102929e83447"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 169, 3, 98, "Title",ExpressionUUID->"764b4fc2-101a-4e0d-bf25-3d960c3d54e4"],
Cell[752, 27, 749, 15, 142, "Text",ExpressionUUID->"e90212a0-a776-4f73-940b-ce89c3d1c344"],
Cell[CellGroupData[{
Cell[1526, 46, 361, 6, 67, "Section",ExpressionUUID->"144d52b8-705d-4697-a852-82cc01bbc50d"],
Cell[1890, 54, 1220, 34, 72, "Input",ExpressionUUID->"b4f4568b-19fb-47bc-8ac7-91d4ab018086"],
Cell[CellGroupData[{
Cell[3135, 92, 1712, 48, 157, "Input",ExpressionUUID->"03cd135d-f897-4803-a715-010f37ffe5a8"],
Cell[4850, 142, 53105, 884, 260, "Output",ExpressionUUID->"9fc6d20b-44b6-4cc8-87c2-d18894e3f999"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57992, 1031, 173, 3, 54, "Subsection",ExpressionUUID->"72f2b095-7c5f-4c48-bbdb-81ac4fcffe84"],
Cell[CellGroupData[{
Cell[58190, 1038, 858, 20, 30, "Input",ExpressionUUID->"975f9e53-dc4b-4a73-af4a-d14ca5eb2069"],
Cell[59051, 1060, 401, 6, 34, "Output",ExpressionUUID->"7a29dc8a-81e7-406f-bffc-ec21a3b41629"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59501, 1072, 163, 3, 54, "Subsection",ExpressionUUID->"8ba2e4f6-3e80-4dce-b621-c8f4fcfd99a0"],
Cell[CellGroupData[{
Cell[59689, 1079, 688, 17, 30, "Input",ExpressionUUID->"da8786a2-b759-4b70-85ab-9fb72c6eb933"],
Cell[60380, 1098, 1135, 38, 62, "Output",ExpressionUUID->"645214be-34ff-4305-bc85-7b5bc70577d2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[61564, 1142, 179, 3, 54, "Subsection",ExpressionUUID->"2841c36b-6524-4abe-ad64-d59e2ccb99df"],
Cell[CellGroupData[{
Cell[61768, 1149, 1281, 30, 52, "Input",ExpressionUUID->"4e3a9340-6be4-4e2e-b3a4-20e6ccf78c0b"],
Cell[63052, 1181, 127, 2, 34, "Output",ExpressionUUID->"abfc7d0a-15c1-4236-9fda-beccc39c516e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[63216, 1188, 1317, 30, 52, "Input",ExpressionUUID->"754142c7-e3ce-485a-8f88-7b4dd0afd48f"],
Cell[64536, 1220, 3420, 100, 83, "Output",ExpressionUUID->"345d5412-109a-4a70-91e6-e8e588351f53"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[68005, 1326, 158, 3, 54, "Subsection",ExpressionUUID->"bb2cb181-c8cb-473f-967f-85d53399f7b8"],
Cell[CellGroupData[{
Cell[68188, 1333, 2186, 62, 220, "Input",ExpressionUUID->"0003d54e-7b68-43ff-98eb-f15b7f20c073"],
Cell[70377, 1397, 14998, 353, 390, "Output",ExpressionUUID->"b5e77554-24e2-4f38-b771-877bad095673"]
}, Open  ]],
Cell[85390, 1753, 270, 6, 58, "Text",ExpressionUUID->"c231b664-da59-4596-abd7-ed8f1b20b2e0"],
Cell[CellGroupData[{
Cell[85685, 1763, 1535, 43, 84, "Input",ExpressionUUID->"d5fabf53-be1d-45bd-9110-c4d18c267c4e"],
Cell[87223, 1808, 1405, 45, 62, "Output",ExpressionUUID->"ec2208ee-cffc-40ae-8563-d9b9d91ecc60"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)


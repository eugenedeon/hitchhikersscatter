(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     62560,       1365]
NotebookOptionsPosition[     60674,       1295]
NotebookOutlinePosition[     61029,       1311]
CellTagsIndexPosition[     60986,       1308]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Common Quantities and Functions", "Title",
 CellChangeTimes->{{3.595447877700561*^9, 3.595447887859426*^9}, {
  3.595448736778474*^9, 3.5954487379307747`*^9}, {3.678241258881839*^9, 
  3.6782412636309967`*^9}}],

Cell[TextData[{
 "This is code to accompany the book:\n",
 StyleBox["A Hitchhiker\[CloseCurlyQuote]s Guide to Multiple Scattering\n", 
  "Subchapter"],
 StyleBox["\[Copyright] 2016", "Subsection"],
 StyleBox[" ", "Section"],
 StyleBox["Eugene d\[CloseCurlyQuote]Eon \nwww.eugenedeon.com", "Subsection"]
}], "Text",
 CellChangeTimes->{{3.6174286022468777`*^9, 3.617428710592918*^9}, {
  3.6410039396211576`*^9, 3.641003945296226*^9}, {3.645060407236547*^9, 
  3.645060444609275*^9}, {3.6772990291112137`*^9, 3.677299029295004*^9}}],

Cell[CellGroupData[{

Cell["Surface Area of Unit Sphere in d Dimensions", "Section",
 CellChangeTimes->{{3.6782413026693974`*^9, 3.678241308885454*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[CapitalOmega]", "[", 
   RowBox[{"d_", ",", "r_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"d", " ", 
    SuperscriptBox["\[Pi]", 
     RowBox[{"d", "/", "2"}]], 
    SuperscriptBox["r", 
     RowBox[{"d", "-", "1"}]]}], 
   RowBox[{"Gamma", "[", 
    RowBox[{
     FractionBox["d", "2"], "+", "1"}], "]"}]]}]], "Input",
 CellChangeTimes->{{3.678241310481488*^9, 3.678241343957047*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Spherical Diffusion Mode in d Dimensions", "Section",
 CellChangeTimes->{{3.678241447824778*^9, 3.6782414522083387`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"diffusionMode", "[", 
   RowBox[{"v_", ",", "d_", ",", "r_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"2", " ", "\[Pi]"}], ")"}], 
    RowBox[{"-", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox["r", 
    RowBox[{"1", "-", 
     FractionBox["d", "2"]}]], " ", 
   SuperscriptBox["v", 
    RowBox[{
     RowBox[{"-", "1"}], "-", 
     FractionBox["d", "2"]}]], " ", 
   RowBox[{"BesselK", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "d"}], ")"}]}], ",", 
     FractionBox["r", "v"]}], "]"}]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"d", ",", 
      RowBox[{"FullSimplify", "[", 
       RowBox[{
        RowBox[{"diffusionMode", "[", 
         RowBox[{"v", ",", "d", ",", "r"}], "]"}], ",", 
        RowBox[{"Assumptions", "\[Rule]", 
         RowBox[{
          RowBox[{"v", ">", "0"}], "&&", 
          RowBox[{"r", ">", "0"}]}]}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"d", ",", "1", ",", "3"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.6782414688357687`*^9, 3.678241491300769*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox["r", "v"]}]], 
      RowBox[{"2", " ", "v"}]]},
    {"2", 
     FractionBox[
      RowBox[{"BesselK", "[", 
       RowBox[{"0", ",", 
        FractionBox["r", "v"]}], "]"}], 
      RowBox[{"2", " ", "\[Pi]", " ", 
       SuperscriptBox["v", "2"]}]]},
    {"3", 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", 
        FractionBox["r", "v"]}]], 
      RowBox[{"4", " ", "\[Pi]", " ", "r", " ", 
       SuperscriptBox["v", "2"]}]]}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.678241491687683*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalOmega]", "[", 
     RowBox[{"d", ",", "r"}], "]"}], 
    RowBox[{"diffusionMode", "[", 
     RowBox[{"v", ",", "d", ",", "r"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", "0", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{
     RowBox[{"v", ">", "0"}], "&&", 
     RowBox[{"d", "\[GreaterEqual]", "1"}]}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.67824149900559*^9, 3.678241520007175*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.678241526057132*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Caseology Quantities", "Section",
 CellChangeTimes->{{3.678241992854299*^9, 3.6782419958379393`*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.678242134512966*^9, 3.678242136072867*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CaseN0", "[", 
   RowBox[{"c_", ",", "v0_"}], "]"}], ":=", 
  RowBox[{
   FractionBox["1", "2"], " ", "c", " ", 
   SuperscriptBox["v0", "3"], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox["c", 
      RowBox[{
       SuperscriptBox["v0", "2"], "-", "1"}]], "-", 
     FractionBox["1", 
      SuperscriptBox["v0", "2"]]}], ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Casev0", "[", 
   RowBox[{"c_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"FindRoot", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"c", " ", "v", " ", 
        RowBox[{"ArcTanh", "[", 
         FractionBox["1", "v"], "]"}]}], "-", "1"}], ",", 
      RowBox[{"{", 
       RowBox[{"v", ",", 
        RowBox[{"1", "+", 
         SuperscriptBox["10", 
          RowBox[{"-", "10"}]]}], ",", 
        SuperscriptBox["10", "10"]}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<Brent\>\""}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "2", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.677478195414242*^9, {3.677478595620187*^9, 3.677478607699188*^9}, {
   3.6782422309573507`*^9, 3.678242232981792*^9}, {3.6782423271133137`*^9, 
   3.6782423434824038`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Casev0", "[", 
    RowBox[{"c_", ",", "prec_"}], "]"}], ":=", 
   RowBox[{"ReplaceAll", "[", 
    RowBox[{
     RowBox[{"Abs", "[", "v", "]"}], ",", 
     RowBox[{"First", "[", 
      RowBox[{"FindRoot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"c", " ", "v", " ", 
          RowBox[{"ArcTanh", "[", 
           FractionBox["1", "v"], "]"}]}], "-", "1"}], ",", 
        RowBox[{"{", 
         RowBox[{"v", ",", "2"}], "}"}], ",", 
        RowBox[{"WorkingPrecision", "\[Rule]", "prec"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.678242069511746*^9, 3.67824207515228*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CaseN", "[", 
   RowBox[{"c_", ",", "v_"}], "]"}], ":=", 
  RowBox[{"v", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"Case\[Lambda]", "[", 
       RowBox[{"v", ",", "c"}], "]"}], "2"], "+", 
     SuperscriptBox[
      RowBox[{"(", 
       FractionBox[
        RowBox[{"\[Pi]", " ", "c", " ", "v"}], "2"], ")"}], "2"]}], 
    ")"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Case\[Lambda]", "[", 
   RowBox[{"v_", ",", "c_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"c", " ", "v", " ", 
    RowBox[{"ArcTanh", "[", "v", "]"}]}]}]}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approximations", "Subsection",
 CellChangeTimes->{{3.6782421398331842`*^9, 3.678242141433036*^9}}],

Cell["Approximation from [Case and Zweifel 1967]", "Text",
 CellChangeTimes->{{3.6782421587371483`*^9, 3.678242166768302*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"k0low", "[", "c_", "]"}], ":=", 
   RowBox[{"1", "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["E", 
      RowBox[{
       RowBox[{"-", "2"}], "/", "c"}]], 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        FractionBox[
         RowBox[{"4", "-", "c"}], "c"], 
        SuperscriptBox["E", 
         RowBox[{
          RowBox[{"-", "2"}], "/", "c"}]]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"24", "-", 
          RowBox[{"12", "c"}], "+", 
          SuperscriptBox["c", "2"]}], 
         SuperscriptBox["c", "2"]], 
        SuperscriptBox["E", 
         RowBox[{
          RowBox[{"-", "4"}], "/", "c"}]]}], "+", 
       RowBox[{
        FractionBox[
         RowBox[{"512", "-", 
          RowBox[{"384", "c"}], "+", 
          RowBox[{"72", 
           SuperscriptBox["c", "2"]}], "-", 
          RowBox[{"3", 
           SuperscriptBox["c", "3"]}]}], 
         RowBox[{"3", 
          SuperscriptBox["c", "3"]}]], 
        SuperscriptBox["E", 
         RowBox[{
          RowBox[{"-", "6"}], "/", "c"}]]}]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"k0high", "[", "c_", "]"}], ":=", 
   RowBox[{
    SqrtBox[
     RowBox[{"3", 
      RowBox[{"(", 
       RowBox[{"1", "-", "c"}], ")"}]}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{
       FractionBox["2", "5"], 
       RowBox[{"(", 
        RowBox[{"1", "-", "c"}], ")"}]}], "-", 
      RowBox[{
       FractionBox["12", "175"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "c"}], ")"}], "2"]}], "-", 
      RowBox[{
       FractionBox["2", "125"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "c"}], ")"}], "3"]}], "+", 
      RowBox[{
       FractionBox["166", "67375"], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "c"}], ")"}], "4"]}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Casev0approx", "[", "c_", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"c", ">", "0.56"}], ",", 
    FractionBox["1", 
     RowBox[{"k0high", "[", "c", "]"}]], ",", 
    FractionBox["1", 
     RowBox[{"k0low", "[", "c", "]"}]]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.678242173208981*^9, 3.67824217357022*^9}}],

Cell["Approximation [d\[CloseCurlyQuote]Eon 2017]", "Text",
 CellChangeTimes->{{3.719601298353942*^9, 3.719601305023199*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Casev0approx2", "[", "c_", "]"}], ":=", 
  RowBox[{"1", "/", 
   SqrtBox[
    RowBox[{"1", "-", 
     SuperscriptBox["c", 
      RowBox[{"2.4429445001914587`", "\[VeryThinSpace]", "+", 
       FractionBox["0.5786368322364553`", "c"], "-", 
       RowBox[{"0.021581332427913873`", " ", "c"}]}]]}]]}]}]], "Input",
 CellChangeTimes->{{3.71960130710506*^9, 3.7196013177648687`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Benchmark Values for Discrete Eigenvalue ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Nu]", "0"], TraditionalForm]]]
}], "Subsection",
 CellChangeTimes->{{3.678242018927095*^9, 3.678242028448263*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v0BenchTable", "=", 
  RowBox[{"TableForm", "[", "\[IndentingNewLine]", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\[Alpha]\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(v\), \(0\)]\)\>\""}], "}"}], "}"}], ",", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"N", "[", "#", "]"}], ",", 
          RowBox[{"Casev0", "[", 
           RowBox[{"#", ",", "40"}], "]"}]}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{
         FractionBox["1", "100"], ",", 
         FractionBox["5", "100"], ",", 
         FractionBox["1", "10"], ",", 
         FractionBox["2", "10"], ",", 
         FractionBox["3", "10"], ",", 
         FractionBox["5", "10"], ",", 
         FractionBox["7", "10"], ",", 
         FractionBox["8", "10"], ",", 
         FractionBox["85", "100"], ",", 
         FractionBox["9", "10"], ",", 
         FractionBox["95", "100"], ",", 
         FractionBox["98", "100"], ",", 
         FractionBox["99", "100"], ",", 
         FractionBox["995", "1000"], ",", 
         FractionBox["999", "1000"], ",", 
         FractionBox["9999", "10000"], ",", 
         FractionBox["99999", "100000"], ",", 
         FractionBox["999999", "1000000"]}], "}"}]}], "]"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.580857869736608*^9, 3.58085790651698*^9}, {
   3.580858006653529*^9, 3.5808580617249804`*^9}, {3.580858130765576*^9, 
   3.580858143402453*^9}, {3.5820834807223883`*^9, 3.582083558878972*^9}, {
   3.582084922647297*^9, 3.582084929895653*^9}, {3.585619169116645*^9, 
   3.5856192615055943`*^9}, {3.585619343221818*^9, 3.585619348272163*^9}, {
   3.585619383215056*^9, 3.585619415220441*^9}, 3.585619662889173*^9, {
   3.5856212618401203`*^9, 3.5856212944936237`*^9}, {3.585621383963101*^9, 
   3.585621401933226*^9}, {3.585628917390848*^9, 3.585628920575034*^9}, 
   3.585629056929491*^9, {3.586319739333603*^9, 3.586319740716525*^9}, {
   3.58631977922552*^9, 3.586319944538023*^9}, {3.586320085610508*^9, 
   3.586320114369978*^9}, 3.678242042248653*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"FindRoot", "::", "cvmit"}], "MessageName"], ":", 
  " ", "\<\"Failed to converge to the requested accuracy or precision within \
\[NoBreak]\\!\\(100\\)\[NoBreak] iterations. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/FindRoot/cvmit\\\", ButtonNote -> \
\\\"FindRoot::cvmit\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6782420798589287`*^9, 3.678242379653948*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\[Alpha]\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(v\\), \\(0\\)]\\)\"\>"},
    {"0.01`", 
     "1.0000000000000000000000000000000936006300708171097183425655356822951574\
5634713`40."},
    {"0.05`", 
     "1.0000000000000000084967085105831809145182885723548247218464583668982099\
1755005`40."},
    {"0.1`", 
     "1.0000000041223075932422073391338853459570618989681783381273267444642930\
6464399`40."},
    {"0.2`", 
     "1.0000908865443807108211091921603269637347040562555063874226504359062173\
4062356`40."},
    {"0.3`", 
     "1.0025928887932231991429825016429640921678275708706963394448977836252214\
762645`40."},
    {"0.5`", 
     "1.0443820337608334849840139063447477608690281572151905275162476497684821\
1143197`40."},
    {"0.7`", 
     "1.2068042539852860335721445371054483976394441940507616548896020488877478\
9938855`40."},
    {"0.8`", 
     "1.4076343090627720158900718258081638360561534141264507521825346660704449\
8740418`40."},
    {"0.85`", 
     "1.5885586253631796964284213177045016634120688438016527287584530933092486\
16388`40."},
    {"0.9`", 
     "1.9032048560448477189805612374577808168246254139018323190275851158521727\
5434042`40."},
    {"0.95`", 
     "2.6351488342687391773116799675865495226220829510952756675133299296758646\
2693291`40."},
    {"0.98`", 
     "4.1155204763164454212714317926829957534093415960085562790584905200863214\
4843771`40."},
    {"0.99`", 
     "5.7967294513020023097758363655975987933155779539560678563729768261144396\
1850596`40."},
    {"0.995`", 
     "8.1813425358574203217300130333809174753022958573143144422939948424895771\
1296554`40."},
    {"0.999`", 
     "18.2647257265266737335635046292694804355336300719690864371008`40."},
    {"0.9999`", 
     "57.7373364520128971741908845980514726134483546280850561269532`40."},
    {"0.99999`", 
     "182.574916135971860243033628341329873734073228354598631695543`40."},
    {"0.999999`", 
     "577.3505001298654062131292059610773432720808188472754805146395`40."}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6782420427215652`*^9, 3.678242079908133*^9}, 
   3.6782423797019663`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Evaluate Case approximation", "Subsection",
 CellChangeTimes->{{3.5954491438923197`*^9, 3.595449148346766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Casev0", "[", "c", "]"}], "-", 
     RowBox[{"Casev0approx", "[", "c", "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.585682562889319*^9, 3.5856825660269423`*^9}, {
  3.585692432442535*^9, 3.5856924857969837`*^9}, {3.678242185908289*^9, 
  3.6782421955465117`*^9}, {3.678242351064472*^9, 3.678242361592972*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJxF13c8lW0YB/BTZsgKISKEjAjJOPdzTlYosiqFjJBUViQiMkqRJIRkhahk
ZCXnOcpIlBVCXqNhJ6QS4vWMQ//0+X5+13Xd1/2cgR0O7mZOGwkEwhEGAgH5
X6osYDQp6QWJgP+jN87+XPhk3YPf3ve9oaw7mVek7dfQutl9Xr0wlanEXUic
YBt/7kJcc1VDFvezIOPKtfqQjlOZ+V7r9b+VGSM3vaS5mvihaXe46Pv1+sJT
x4L2DdDcWnVrMcjPeGY9d72be8GJ7iXuBuIB2bbzAbwv1+ZL1Pw9fVfq5Vr9
Bisxh8fq6/X9s4bWrw6u5y9vXjjabbPuRLEUkx/u6/PMzL7rCMet5wrjvCSV
HJo/V7GFQOoHK9bzUYHTyg6N664rui3v10fzYFWmQYVUzNR6fmVocMcjQhXu
bqKV3yYhmLtqbV81LiW+TomqtXrevBOck6predUsOZSFzmA9f+rRsax4ft03
mP/NHwhan+ecvvPnyTs09xG11Yy/+zysWns9RFsvjkSVrvfHKQi0jv5bt+eb
/Y0rHJS152Ns61rLJ0bzFFH2Tywsr0JZm898+2WFjt56fcCUTUZ6NGVt3qn8
TC9LEXjN2x/J/5pTonmhqje9wveOHrzWH5+svSB/Al6bbxLXHNB4nuYlIlv0
8RXnqzQPEt9c/3qVLn59fshVd/r0XJq/VkGXF64Rq9ZzfgOz+6LHqWvv5w9a
/wlTzlHX8miiS/rxYJqrqwxVf4r9voubzElhULySHftovb561yZphZc0jxMD
xOMeNzXjruYG+4RF5F0+U9f2n+V7XED/m+YO4tEIwaRW+uq1+6sw2PWmslev
zecOyd52nn/d08vj1ppiNHdUNV9WTN0kh7t6O+XJvM/Ax73r8yJ8XormkGj+
RXSeJTh4G1TT7gN03PUeapnT8lnijsnIr5w2NDcQl13adg444w7mofR94zud
77E+v9LBOvey//p+iQMZYwZha+dVXbQekeGPXs/Ne+TODd9bn6941Cu/JINm
BsD+oXwq5AltP3EwefifgmkpLecAje+0PEWo1WvPO9cgovh7w/o+4fXvf75s
p3m4ykF7y96bfevnk6stL1oOr51ftR2klktO087joiy9+DI/93d9Xq/qLo0a
uldr77fy526X72ymWRDEKZZU2W7FXS0NvPL//pPfQctXiCYyJNKSzKu1++5+
FBbcqIJ7cCeFTaLxVSKEW1ENjKVz0J3Wp9UXVtULH9HZa0bzfFVWcnI4nTWt
X5USsnWwvs1pfb5d3E7mdHfcwRsAxHXWwM0Pt4kq2BZdeJMYijtdFtAP6no5
RtH6ecHUnk/Ho+JpniV2h3rsL0ld24f4upNhV9+jtftVPZW6z0lf9Grt+Sb4
Kc7LVtJcXRXcVDdgXkPbh5HiKmz15vI72vMiUyzcp5897FzfH3oVntDUv76/
9JZtV36O4PZQBlxOhU7bZmi5Olgo0zXSXqDNkwRfmT+pnKV7jc9jAc0nPITu
stHcTax4ykD/khd3MImSuZw88Xk7LSeAKBPFDyzSNDdUXcysq1Tag7uah2I7
dyLzhAat/yBFX2/6Rog2rb6VqJQY7vn4EC1nBkLjgsfbj+COUQeMxELywknc
g1pg+pautJgLrV8J9A70chh64iZvBbV7PP54+tPyKeKzUIaBpNC1fQmJncn1
r6JoLqwKkVJ8Nha/np/zq4vnSlu7f9WRphOB6rm47XZQIOFpR/si3HFHKNLu
4YduVNLq+4jcrwRVimpo9+EGS9yF23re4c7VAsOOunQbunAzHwStZb3j0gO4
TTRAJbNHu8ko7vQdIOsEQ+WlGdr8BWL00+SM9IW1/YmXlhVuNNDVrH9+Teo8
ptlq1u5zMPOEJT8fzR1VKnM/SGQR3MGilO164VIu0rg9jlCYEwU5YvbUrN1n
dqzgd7kGrZ4T9Gnq9g9o424lg/pbvXVMRjQfAYUD7vkKR3HbHQBJexjij9ni
NlECIaHJAUEuNbTvD3CuU8Hxkef6eUel6g62+OOeVqOQ/U4o/wmtWXu9ZJp+
CIrcWr8fj3D4xgMJtP2YKMtuguNuabjntSmj1QVtCbm0+mpiO7fuC7ioZu15
Vjn2pg9X4h4UBTll7hHstbi7jcBtZgYP1fe4G2yApPFeG8Uu3FkmoOquk6HM
AG59MjDvid8nMYq7WgqMb6+X2D5D208FXHX8zcW/QJtHBvyPJVe46GoxRxiA
gh9HJ1nZcFuYAb2913sYeHFzHgf/+ZfXrwjjdrED3tUjz/9K4s5xBKyM/Bk/
FXATHEHmQf3o72q4s8yB+p1Ll0f2467WAq1duS5Dhrg99oDTQj1HPpnjJouA
ZftN2p3WtHmsIP6RumKLE82/iXLfzwi/daP5M7FGKZmlxpfmBuKJS41/qoJx
+5+nzFAWvpbdoN3PihJBJ9teGIs78QBFxMCK+vg+7hglSll05NOsLNq+AhSj
jpdJqfm0+StVXwUmryWW0TxYddlWyDuWSnNhFXf2IfuoBpoJhLzxAONrbes5
WTFfM7iXNp8LfPT5T9r/Sy3t+5Ti9nIzn/ck7lZ9CsMGiM7tF+5cD0qKntv0
6WXavG6iclTqf/ZMdWvPp7GtudGKE3fwZmC/daX8iADudFEwb62QfVgMt50i
uJ1pG2sgi5sTAMnR20HaKrhHDwCKfPU5AHBbmwGLC9PH9+nhLjkBJipED+w5
jDvCAYQsm6jIWtJyFyCgc3XHTnvc9e6g8EYRu4gr7rcXwIGWoUX+C7h/+IJ+
Hu4x7gDcYheAzwmtLrZw3CqOgC3dq4YxGnefBXj4LbOQcA83sy7QkP3wYCEN
d6EKaPOgi5zLxV0tDlzKlC9NFdGeFzdYWTzlNFpJMwEk7I8z+1xD8yRR/not
qe8dzR3E2ndzcl2duA8GUqy4dwq29uN2OU+ZPXaEqXEE91cryo0H4XM107hz
9SmiX0qHKH9xTytTyqWHm8s31uPzhSnGbnxVRaw0b6R0fPU978ZL82DVCaue
7bIiNBdWDbZptI5I00wgnNZPuZqltO4p+J+SPXHd3nttvwrr4RaVpSw8qY7v
PYw72JESLCZ24N5xzMGnrlEYk0LnzU/R+qeJURzf8jjP08wCuK/pWb2/WL/2
/kpcesR2M5iWK4HtFzbBejdxq+0HWWOu7nRxtNwYyNi9E61+gFvHEhR1ybcH
PMLt7QDUjG6HqhfR5rsCuGZa5XclbkcvoKNhNlxci9vrEmgsfH7PvRn36SBg
IsVrINeN3ycmFHQ9uLgwOoTn5deBNU/3k+wJ3IxR4PNNdRuHX7grg4DLhvvs
Iiu4mT3BlO8S9RPzG/zzYQ+8p2w8E7lxu5iBRUeq2BEh3B5aIOSTaAeX5Ju1
58FsFhLerPBm7fs/uuGLaqQ6LecAPCTd0QPaNC8Sk0tzkuiNaB4misoxH3x1
FDfrbUpO5pmlQDvMwUzBFDmBpnwNVzx3dacU35az/XMB91drihpjNGdJIO4Y
fQoc8OOVx3XaPkoU3Z8mF+Tv4CYLUN6dKZYYT6adv1RlNrilKyeL5u6q7qM+
1089o7mw6uT7LjXRCppXj9RWG+97tW7XyqT7SU3r9dOKi4eOduJOV6dcfGS9
zD2A+6AHZUkYLmgZpdV3EEPiROyjZmmeIzKzXuU2WFp/frevfq5hYGxY+7zz
zWv7vObAbbcXpLhlSwYJ4E7XAWLfGLs1xXFLm4FcK5cb83K4S2zA7va3GqWq
uEedQYm+7KQnGXezB9CgRj3YbYg70xdU750ynjDHTR8M9J4eJuTa4GYIB+/E
ioocT+NuuQnMkrhP7fDEXJ0XA3o4vHn6/XFrxoFzVjvPzYXifnsPLOd01bDc
wn35PoiZvb5tRwJuy/tADFK/sC8Nn58dA0pujDca5eKmCwMHOu+LORbhpviC
XlEjf/9K3PBZcO7ccltMDe5JW7BcXrDr0TvczGYghs7+KqUTN2H1+R3m7vnQ
j7twLyhNrlEcH6HlUkB/2DuCMEMzP+jdIznIt4A7mAmcC/y4T57uLZ7/IS43
RNzWZqN5lBjDozFynJfmbqK43QTksZ3mBmLZk5SEa1K4I/0p+n+MplIUcdef
pfRqreg+V8cdYUU5F1344K0W7mADynKP/a+Bg7ir91Lu7Nxi9NuCZlGKhGdt
FttJ2nmMlLIqnyWx0zQPV+kzS1moe9BcXdVr3v3ksB/NhcRzaTfonEPWvTKu
YRUQuVZPjFWdLI6No7m1SiLkAUveA9zzOpSy98YO1Bzc0j4UfQFCZWcBrb6D
2OtYxDVZQfNP4vlChzMbX9PuxwIIS1te8TfhJouC2AN1/AoduNP3AIm7Fz10
/8PNvB+U9Us1WA3jVjQG+jI9Il4/aPlx8Mnnpm/EPK3/FHB7pdmSuqER89Hz
gLD5u2QpC24OHxBrmXqlaQtu1UAgkXW4a0gIc3BuKCj7Qdg9vxP3qxvAQLM4
nF0Br/ePAX3XTv0noYa5OjMOuLXz7NXcj9dbJgHC9vooU0PM5PhUEHvG9+tp
c9xSmUCiVJp4xRrzoHo2KCf03o1zwuddygWGhyInHrvh8z4+AX33iNqvfBvX
3m9uX74nfwzG68PzAEEhbfb7Ddw300Gsv4kh/V3cIB7srN+QKZiCz9sQCSq4
nv9VzMa9GAwMbRxNDzzD5wv7gL5c3jybctxTZ4DbXD3Buxq3hy2Y9sgTMmrE
vWQKPL9Hqkl24CbrgNkzbhYr/+EOVgXewyYe3SO4q6XBbwflqKIZWv024DvA
m3tzkXY/DjBvNV9ziqEJ798I/Lt7B4gcuAl/iUsWlEVeAZrniIFtaVt/iNE8
Q1w2ClFukFt3cKPj4QxVmmeJGw8cOOtPxt3rQAmt2XXd3BC3tymFnsz2UM4C
NxlQrlVNwQwncQ9KUJjV23r7T9Pm0VNulD7/Xe5J8yCRRSmB+85lmv8Qo55d
2u0aTvMikV3WylD7Ns3LxNuPgLNQEs0rRE4J0ZBfmev1sekbU5uf4nY5TOER
/vbiURnt+dCB+KQ3ncHVtHomwMf3eOZ4Iy3nBImxUZuVO2gWBoIc7rvY+mn3
kwf3I011v43QciIQYlaxh2dwXzIEqWF8gfcWcfMfA6Ib/iZ6MLzDP3+nQEbg
pxIDDtwd54HYAqVVTAD3yYsg62L65KIYbolgIPkzhLlTDnPw9WvgkbuTxDNV
3BHRQHryAPk6Gbd0HHjsImNtZ4h7QzKQ+8Z2Sd0CM/l8Osi3/3GX+yQ+3yYL
7O5vK5g4jectuaDwRElTrSdmu+p8oPQxYeTBZcwmcUXgubkfnW84nl8pASqt
ViImtzG3JpSDskOQ5q4kPO+oBGpvRY9tfIifly4GXujSXfj09N3az3eN19+i
S8polgBVUMPjW9WYB48/B9DLx/XOjXhekgeo+259JnXg+06nA3KJ+zJ/P55L
JYDXimaCsyO0eVFAJ19FtWmG9rxCQN2urWZZi3j+xhfo5fw9H8jwHn8/u4EG
sb4bRzlwp5wChmlwtoIA7tzj4N22jFfM4rhNTIFxYuh/Q3K40/VBC4/z30pV
3N1aYDnsi6AzGbcHCcj9siNyGeJWJAIrp36bKnPcgxrgZqdV0Gkb3NUaoEK3
J537NG6yJhgpPfqa4rHezyfZ8cXFnzYfAJ0EUwaeMNo8CFxgbJGk3sItTQaZ
Fw/pu97DTdgPWoffnuHNoNXvBytHD0RWP8ZtqU/Z/ab26dkSWv1UlfU+rWY+
GLeoGoh8RP3x6g1uFy1QuRVwnW+j7a8LRq9XKvF/wl14AGyd32dR85W2jwHQ
cyn1cZt6v/b58e5Wuicwj7vhIHioX1hRu6EZrzcC7RXyve6suNONAGHXk0VB
XtycJkAhSVq4fjvuQRNwclMO5CmNu9oURPmJ2wkp4R41Ay/H0q++0cQdYQHG
j29/6KWLm+cY4G+8Xyt8GLeiFTigITDcYEmbbwcuPk5g8nbAPeUEsgR5domc
w+12Hny4ecew0Qc3tzfYuMh+zicIt/9loHg26pboDczBz0OA7adNBU2xeC57
A0QfvN56MQUzuTgGVL2kn92Rg7s1HkzIhmx5X4D3b04BgikrKpde4HlNBtBn
CzwqXoN5cFcO8A1Y8G1+h1lU9wnImfRN8uvCbBJdCDqsf1VKDOLzep8Duvde
fS1jeH1EOVAC0//8f+L7JbwEt4UnyG2MLdjn3+E1gG+5OARwYmaeqgWT/76F
SgliFk19A7a5ncpuF2/B738eGPYP1gfK4+5wA5eMT45K78Mt4gEewZ82dZBx
f/IAXbuPywYZ4k7zBPRpXYdkLHC7egFlDgu3ThvMFf21wCGo7XbwaXy/zTCI
+WFcJOuJuTqnFFBt37V3+WO2O1gAploM5q6G4a7PAULkN7zy0Xj9m3RwsFBn
X/c93CpJwF/0tWVoBm7vu6DU6bZoxGN8n1u3wfRj69Go57iv3wSy07sK71Th
3nMdOO/945tQhzmYMxxk+NeS7jfjbg4FfdQ7TOkfccuEAj4G25asQbz/Twgw
NZS7lzeG51tCQdTtvyefzeL5mVBQ31Ev+XwRz0dDV3+/M/xjtbEVc3gYSC1Q
tOpnxK0RDohmW6l2rLgJ10DP3D+xLxy4O68BHo2m8RF+3FkRoLivyNhVGHfK
DXA4KLF4cgdmQupNcLPWyX9GpnXt+1jq9KH+Cwq4h26B2k3KWr+V8X6228Dh
qUDOJTXcO2LAijGBZZGImfw6BqTMDJ8P3I/7zB2gEfe+bUUXn/foDvioWrI3
xBDPE2KBd09yEv1hPHe7C7gDrv67Zo6bGAcKtrvYb7LEXM0cD8ZP7d3Fbo/3
FyaACEahWzFOeH30PbAzb+MMtytefyERvD44ZhHvhts+CdhNtVRsvYBbNBn8
iykTSvbF5x27D5KVHwQLBeD3s00BnZdc9XeE4/mdVOC1zfTpwxu4qWmAE97H
KRmNn3919ee33Xbv3FjMdooZwJCOoVvmHubB2Qwwmj2hmX8fd3MmCNdvT1NI
x5z+7iEQm6igK87Cz/+VBapvpZ1WycNzixxwUvFaU1k+7t+PwGL7OQX1Ysyi
Y3kg0cf87ssy3JpPgSq/xh/wEt936RnoqBS1qqZijtleBDxtmKhatZg5mZ4D
dsKUWF0D3k8uBU8zO64deI95uq0cGOq+HH/bhp9fWwlGRjKMD3Xh80RgEHYz
ori5F3P3XDUQk3fnMx3AnMtTA6gtR/w/fMGfv2cdsPYi9h8ZxezC3gAWeMS1
uifxfSYbwb3yTTknZjA3sDaDp7PM56DfmCf7WsEreWYlsUXMWb3toMuFaZ6B
0IZaf7kDTDxkhMfoMQfrfQSEAYaw95swhxX1AF5BBsMidsytmWVA5gg9Z/wW
zISgckCKoeu6xI/7VAWwaNqYYi2M+/ALcIZxowNZDLOHdiW4sn+DtIQUfh75
JbgbQJhiksNsp1cFcstXnk8o4vVHKIAyu+zXshczpxsM2uWXSc818PoYKhhx
+cdwj4Tn8Cew9HCpyV8Hc8y2j4BrYPHOSQPMxIIPQFJw8ZiWMWaJPW1A88iC
sKQ5ZukPzcAk5u+XTZaY1azeAaem+bzv1pgtKxqBP+O8e5s95vnyt+D2/j97
S53xfZXfgqyA34uJZ3FvfgtelP96FeCBuVDhLWienbtu54Pf/8Zb8EV+zkjH
vw1/fRvBvMvPLdJB+PMrbQSbs2Z7WMMwR1xsAmIDM2k/IjCPGr0D+wRnnD7c
wuftew8OHZmWLY/FXy/FZmAf82Mm+R5ev68FRDJOBTpkYH5a2grS93/X1svB
73+wDZQGTG6SeYKZPNwGBmbH42dKMC/JfQBz8uNWnS8w13Z/AJvOjO14AePv
p5sdQHlgJD+4ATPbSie43vS1jqMPf31UekAK49fIn4OYRbl7QdH+L6Yfv+H9
f3rBp/Kh/1J/YO742AemZwcfhsxhzvrwH2DYPXjG+S/++rT3A4Ws/l/ydO3Y
+/XyINAZ+O8lFzNmF5YhcFzwv6u/2DCnPBgCoTGfNlP4MDe0fQYfA7p3HpLB
3OrzDXhlrsB9uzF3iAwD9gZJy/PKmKubh4HOFp+b0UTMy5qjYEAtRVxkP+bX
C6PA/2RNVYEuZjPqGCjM4/rRaow52GoCHGxRi7A3xyypMgmG52x3zB7D/Izn
++rP62fmW+wxx01PgXKnzsmHTpibv/8AZpFL4SqumE0vT4OILsOKIxcw/7k3
A8SXPE2HfTFf3TML4B1J4xcDMHt9mAVz50aEEsMxhyvPgdux7GXSNzHv+jkH
ZCr2Hn4RjVkd/gXs6cKu9t7DnOn3ByxJPxE8m4LPOzsPEo3bny+m4/ue/QuU
vf8eisrG/Nx/ATQniQ4LPcbsmLQIzlAPBOU/w6zYsATov7nxQ88xf+dcAGks
CUXN5Zh/ti8ADUWKoW0V5r3Ji6DzyNcvP6oxf3BeAh6XWQOD6zDPqP0DOfXH
CzKaMatMLQNum99bvg5iPm+yAcoPEc73/oY6uKR5A6Sfq6PHMI7Z1GQjdOVn
7CXJn5gHbOigiRsK/7kwfECdn8UAXSs4evHvpg/Y55PMCIl1BnLcZMdsNcAI
WYq+2/9kK1Z/S4YZ+qn7s1dTCMsTu5ih6LOC3u9EMXNe3wTVlrnkfN+FufwX
C2Tbd5t0ZTdm4RJWaGFDeTe7MjbP1pcNipfq90zbhzmFtBlSNGJgVSRi9XE3
OaAmL7msajJq8k8GTsg50RyY6mL1t005oQ2wf9eQAZbfzuGEUr5kuHsZY/3P
6bgg9tAE1kkzLJ9x4oKCxSIfOR3DbNjMBZ2y9x6wtENdzVrADckM6B0meWGe
zOGBUq5oTlRcxM7bpMALbd6ueF3pMpZveMkLTVsLUHeGYbljPx9U3juxmy0B
m69pLgBJ+w82hidj++gsCEDJAp3OK6lY/fFsQeiKJZw6+wjL55iEIJ2uGPae
F5jVNohAZT7hj81gzCONIpA0r7/eu9fY+XmHRCFWi1NXqE2YHcV2QO1te6ey
/0MtGjMpBul4ytwU+Yw6vd1JHCrlFJFMGkZt93lIHEo8zHwy6gfqwezPEpDt
+973Xhs60HkXmaWg1nMtZyYZUIv2JklBWmy1DM4sWB65WxqSPJgPjm9BTRBw
2AVNNgTlk3Zi9VvmZKGTLt4GL3ZhHs2Qg1qZznxT2o06OMNcHnquZyYsuQ/1
IHfNbsi/VuIWmwFqE7FxRWjylMCua0ZYfb3pHsiGjr1uxRR1TMnLPRBZ68/S
7Ans/IwEJYip+u25nnPYeTquKtD0ny7XEk/UZOtpFahX4avL7YvYvDK/vdDT
tGVH3WDUHvEJqpBZkLJN0V1sPuOSGqRZTraKSsTmKaSpQxI/jI6ffoC6MExP
A/pz0uWI8CNsf61MTSgFemB0oxJ1OnMsBIVffHzQkYqas1qWBLk9Kzcg1WL9
jjMkaP/2dt1f71FXiNWRoeF/jJD9EGq76/5aUMteHiJxGOvfNqUFVZzfobF1
AnW3nqM2FPmfpur7Oez8FEsdSJHisVuduROx5XsHPUjgV6Acz2bU+o8n9aCN
8pEyP7hQx8T6HYA6U7Ils7d1Yj//UvQh/4De7VwKqNU8WQ5Cp0pGhCaVUSu6
PTsIHZqcE3yjhvrS4pFDkIg1x9ZALdTSHIVGUK2mDsfYEdQ8WwxMoPwLpptr
T2D7HHtsAiU8OcmaZovNK9xsCp3Z5sd05Azq+YZeU4h9MX+lOgA7v+a2OWRZ
uXU68SFW3+t2DGroO/RKNBc1p9/3Y9C+lauxuU+x/klfS4hPZ1KlohTrd75y
HPrwvtrv4xvUua75VpDW9C9D23eo083J1lAxt6zQSCvqBokuayjmWDz8uwf1
ZBrLSch46Awd3yTqTIZDdhCFLq3jwTTqZ2kZdpCcZEf2zl+oGz/O20GsZyH9
vcuo7YhP7aGGOe5bFpxdiF0SpU5B2sxVfHdVUJ+U8nWGimVmRgTVUetvGneG
xIwkX2QC1F10tqchQmyMVbEeahXnwy4QvM0pvc0SNWHA0BWSh5I9j9ug5gxr
cYVS7Fq0huxR/448eha6nK3+bdoV9dLE2XOQmgK7DGcg6nGWUjco11R78d5V
1CVfjNyhrd6X3olcQ33Na8wd+l3x2U3hNmor9zgP6LlW+XPjDNTu/N88od1H
7cCtOtQHslq9IV6uZx4XG1E7b4F8oKWmxYe2LagfRef7QI3777Eo9aAefhd7
EXKWb/7YNYl64LTvJchodBtr9Qzqp6q/L0EqD89Aeb+7sM+vrx+0UYAh+zLh
I2KzjmB/6AE90UuUB3VeWlEAFEa9kb1JAPWQoU4g5Or/sXtWGHXIw55ASG3a
i1Qnhdovii0I6viUx+aqiVrnYGMwxPZ866PnDoiDd+5IDoV+nnfqTTmN2iVs
MRTqlX6++do51HppJ8Og3FRjb8uLqJ9slQmHdG6G7/93A7Xjp65rkKzuB+/h
aHS+dI3edYibsCO35S7q1ykV16FBnyr2zAeor+tkRkCX7X9+0itCfVc3+ibk
ILSfQ7EMnZeYzB4J6X+M1hJ4iebHxe5EQnxGMnkTtajjJlOioGI1+4sx3Wi9
g2NrNDTO0cLZu4J6NOzjHShXZ1zvKX03Um80sCsWcvJjCLyyCXH1rtjAWGjw
s+aY2BbUHry77kJdpbmvzkqi9Q1id+KguPGaP0AWzXnbpuIgU5EBeU5FxOTO
Dcbx0LsI3uQSdbT+O4ErAXptFeL17xBaT+Z9fA8KjnmQ22KK1jtd5EmEQF1F
f8ZRtP5ERHAiVLH7h6GeHWqdjzZJ0LMN1uK3L6D11m3y96HkR3s7RJPRPGVB
Og2y7DNh+ZmKOFj2QlHa6vvvHLnuIVpPoN+eDsX4Zz49k4/Wi7U/SYeuGXGE
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
R5iYhlb3ZXAfYpMlae2zf2KyadXpn3My9WRJh/QNNySzrrrajr01WJZk5yqU
L8e5akKguNdvWdK1Z9X0ZgKrFi25PzwsR2pX3VSSIovk3t7y/+0mnTuQzK1k
surpa6MSsXtI9rzjY+5myDwb59ele0hHv6i/yrdA6+XTevaQyEE97ruOI/sw
CfCLKZG2lPO/F3VYtYckG3eZEqlS8t51Du9VD1bKBo4rk5gZ45Ym7yHnCz8i
RKiS/n348kEmedWcdTYHS1RJsxnKT1xSVh08ZP15UJXUBz4c/5qO9G/+81tj
H6nAh7v8U96qCztY38zuIx39FuPZ+BI5//7SaU910sHng/rM8KrtvKXzM9VJ
5KuKonrVyD7UYd0OdZKMcGvzq1rE3QRvNQ3SsgWH3Iv3yHmpfK30mqSfYrZ0
f1qQ/e4CqpomaXT6Wa9K+6oVndoZzmuS2qOMbxR2If2XoPtdmqTs2lvDjwaQ
82I4fuUTSV39Y258n5H7hLkeHSOSGP/q/gn7ivS7uonvBKR9WzKDfg4jz9fr
tbU9ILnILzM5jCH3e8ROlwpIiQdOxLROIPc7Ri/YSaK+tS/jJ00h83qvPCoh
URcuc2fkTyPzOmzN4khUmQS3XUI/Vx1jfFvQm0S1KmwsuvkLeX0cf62Yk6hR
jZIaf/+s2mS//0YVEvX7cr9h1xLyfrG9enIOohaePnwuhvEzidDqPO1+EaIO
XX0yt8yM+FK55jGIyp3CFHieddWc6kPiahD1Qiv1liHnqhUZCQYLgKqqrlhA
L7jqQY9vX4IA9SUL1+wl+VXbSdroxxCpkxLn/UcUkPpncS1eRKoQ6e3Go0qr
Fq2q8TxCpF65cHWL8r5Vk38WMG4jUsl9Myrfyasu3H3c45EmtT6/3dfeYtXp
LKMKdRrUNpO4fwaXVx08xdO0RZ2qYxf2IzoQmd/x78CiGrXC3XvoQ9CqCUF8
vZ/VqOnRFnU2Ych9KuJBsRrV7R3PLc9bq46xoCeYqVHZ9OOFktKQfUOjHOP3
UfVJCZqjNcg+ERNAVpVKlU/0u8b2ZfW80vefbytT3W7ECS2xr1rRVCLKX5m6
/VsM1ZNr1R7//TRwUqZeSbnBYMO3ajuhio2aylQi6+U7yqKrJvhOO48oUStG
bfIGlZF5IZIT2krUwofiPRpWqy60vn6edQ/VbkUkoNAGmT+gGj6vSOWwEhKR
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
VcTKXPqHezATuKWI/15Zwb5vK3I6of8B7w+n/w==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.2, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.585692436830261*^9, 3.585692446058485*^9}, {
   3.585692477221054*^9, 3.5856924875732393`*^9}, 3.5880887265714607`*^9, 
   3.5954489459277763`*^9, 3.678242200202613*^9, 3.678242237104746*^9, {
   3.6782423354813757`*^9, 3.678242362126442*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Casev0", "[", "c", "]"}], "/", 
       RowBox[{"Casev0approx2", "[", "c", "]"}]}], ",", 
      RowBox[{
       RowBox[{"Casev0", "[", "c", "]"}], "/", 
       RowBox[{"Casev0approx", "[", "c", "]"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"c", ",", "0.1", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.58569373718681*^9, 3.585693737839445*^9}, {
   3.678242187451572*^9, 3.678242197179687*^9}, 3.678242364888165*^9, {
   3.7196014251572027`*^9, 3.719601429153708*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwd2Xk4VG0UAHBlSYgWIlFUlrQJKVunEF9Fyb4kJcWnIpSKQiERkhaSsqSI
QqWIImbsZJkZhM8yc8k6Y4kU6rtn/prn97zPvXPe7Zz3fa68s6f5qYU8PDyz
C3h48Ffpw9WBR48+QnnyYVJjwJCS2XalswiWPZVYgA72L7pou7YYXop9XYjO
nd6bJGdXAp/jt/Gh2btcXC7s/wIuVqX86BBfpSu2/V+gUFdrEVo6byhKN7gU
hg6LC6Kb16ctKpIog/5jz7jtt+85XtfKKIOuRGnu836c2rXf6spg2p6P+363
g9rFl8fLgKfhPff/rdMzjkqtpMDtJxu58RnySs7ma1PggmPen79/OaCz/VDN
IlMKtHZnz6HVnEIf2ThRwPho8G/0xqhPbuleFNA8qDqDliua3PkzmAKDa/Km
0JKDKouMH1JgVn/JJFpU0rnlYQYFAqS1x9Bz3o0XNOspEGYnOIS22q93WKWb
AoLM/H509trMjWvGKWB2UZOFPl4X3MUvQYUP6xI60JE7C2v/ylIhgn33G/pj
6ljBL0Uq5PFcbUUvv+J4b3QXaR1FGpqqsPMfxlEqaInUV6PHYs7taDhFhZ7D
RyrRsnPP1lV7UKFxYwUV7du8dP5TEBWCi4NK0MqBQ2/S0qiwTFU9D205JJf0
9DUVzo3seIO+bmUTGf+BCkIXlbLR7ZuopyOrqNC8oCWdG2/bk9UXRqggkWCf
gC4woAt6TFGhz6L+IbovW2ja9Q8V4v9svofeHXqp0WFpOTw2fHubG+/2I6EG
GuWwXfCrP1rmSZi3nl456HekXELvFyx22mlUDtsKj/ugU7tUtDfZlsOenqfu
3Hhv83GWXy2H9CwJW3TQtHanSGg57AvSsUC/PuFVLRBdDnWRBw6hBXZ1Pfud
VA4tWusNufES+bZMSjloWxRs5Y7X7jNlb4QrIP+Q7t8/pOOdaD4eEhXwkmIy
gxa/rqOwaW0FhDL1xtFCVOFbaWoVMDXyhYme3v/KNM6uAhR791LRXmfE/1qc
rIBw88Of0CORV3OXnquAblGdPDSrwWRFRFAFMHRfPUM3Wo22XU2vgJEDo0Ho
g5esIrTeVABwiEvoivjPOtOFFVARVeCB/tQR9dTzawXI359wQL88sdXFeaoC
amwyNdA3znlyjA0qQWrrUNc86fno1mQ+00owDA6ioS/ngnmpdSXcC2JXoj0n
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
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
       "]], 
      LineBox[CompressedData["
1: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
       
       "]]}, {}}, {{}, {}, {}, {}}}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.10000001836734694`, 0.9995498737526668},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.585693738589218*^9, 3.588088726990275*^9, 3.595448946446878*^9, {
   3.6782421880154257`*^9, 3.6782422004923153`*^9}, 3.678242248056348*^9, 
   3.678242365296549*^9, 3.719601431032256*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{112, Automatic}, {Automatic, 54}},
FrontEndVersion->"11.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 28, \
2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 216, 3, 92, "Title"],
Cell[799, 27, 530, 10, 129, "Text"],
Cell[CellGroupData[{
Cell[1354, 41, 130, 1, 64, "Section"],
Cell[1487, 44, 424, 13, 63, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1948, 62, 127, 1, 64, "Section"],
Cell[2078, 65, 677, 24, 49, "Input"],
Cell[CellGroupData[{
Cell[2780, 93, 592, 17, 54, "Input"],
Cell[3375, 112, 1118, 35, 123, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4530, 152, 525, 14, 32, "Input"],
Cell[5058, 168, 70, 1, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5177, 175, 107, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[5309, 180, 99, 1, 44, "Subsection"],
Cell[5411, 183, 384, 13, 51, "Input"],
Cell[5798, 198, 859, 24, 70, "Input"],
Cell[6660, 224, 663, 19, 98, "Input"],
Cell[7326, 245, 407, 14, 47, "Input"],
Cell[7736, 261, 209, 6, 32, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7982, 272, 104, 1, 44, "Subsection"],
Cell[8089, 275, 126, 1, 30, "Text"],
Cell[8218, 278, 2321, 79, 138, "Input"],
Cell[10542, 359, 125, 1, 30, "Text"],
Cell[10670, 362, 413, 10, 60, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11120, 377, 221, 6, 45, "Subsection"],
Cell[CellGroupData[{
Cell[11366, 387, 2145, 49, 147, "Input"],
Cell[13514, 438, 508, 9, 24, "Message"],
Cell[14025, 449, 2580, 67, 337, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[16654, 522, 117, 1, 44, "Subsection"],
Cell[CellGroupData[{
Cell[16796, 527, 537, 12, 32, "Input"],
Cell[17336, 541, 22433, 378, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39806, 924, 677, 17, 54, "Input"],
Cell[40486, 943, 20136, 346, 227, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

